{"version":3,"file":"react-calendar.cjs.production.min.js","sources":["../src/shared.ts","../src/Monthly/MonthlyCalendar.tsx","../src/Weekly/WeeklyCalendar.tsx","../src/Monthly/MonthlyEventItems.tsx","../src/Weekly/WeeklyEventItems.tsx"],"sourcesContent":["export const daysInWeek = [\n  { day: 0, label: 'Sunday' },\n  { day: 1, label: 'Monday' },\n  { day: 2, label: 'Tuesday' },\n  { day: 3, label: 'Wednesday' },\n  { day: 4, label: 'Thursday' },\n  { day: 5, label: 'Friday' },\n  { day: 6, label: 'Saturday' },\n];\n","import {\n  eachDayOfInterval,\n  startOfMonth,\n  endOfMonth,\n  format,\n  subMonths,\n  addMonths,\n  getYear,\n  getDay,\n  isSameDay,\n} from 'date-fns';\nimport React, { ReactNode, useContext } from 'react';\nimport { daysInWeek } from '../shared';\n\ntype CalendarState = {\n  days: Date[];\n  currentMonth: Date;\n  onCurrentMonthChange: (date: Date) => any;\n};\n\nconst MonthlyCalendarContext = React.createContext<CalendarState>(\n  {} as CalendarState\n);\n\nexport const useMonthlyCalendar = () => useContext(MonthlyCalendarContext);\n\ntype Props = {\n  children: ReactNode;\n  currentMonth: Date;\n  onCurrentMonthChange: (date: Date) => any;\n};\n\nexport const MonthlyCalendar = ({\n  currentMonth,\n  onCurrentMonthChange,\n  children,\n}: Props) => {\n  let monthStart = startOfMonth(currentMonth);\n  let days = eachDayOfInterval({\n    start: monthStart,\n    end: endOfMonth(monthStart),\n  });\n\n  return (\n    <MonthlyCalendarContext.Provider\n      value={{\n        days,\n        onCurrentMonthChange,\n        currentMonth: monthStart,\n      }}\n    >\n      {children}\n    </MonthlyCalendarContext.Provider>\n  );\n};\n\nexport const MonthlyNav = () => {\n  let { currentMonth, onCurrentMonthChange } = useMonthlyCalendar();\n\n  return (\n    <div className=\"flex justify-end mb-4\">\n      <button\n        onClick={() => onCurrentMonthChange(subMonths(currentMonth, 1))}\n        className=\"cursor-pointer\"\n      >\n        Previous\n      </button>\n      <div className=\"ml-4 mr-4 w-32 text-center\" aria-label=\"Current Month\">\n        {format(\n          currentMonth,\n          getYear(currentMonth) === getYear(new Date()) ? 'LLLL' : 'LLLL yyyy'\n        )}\n      </div>\n      <button\n        onClick={() => onCurrentMonthChange(addMonths(currentMonth, 1))}\n        className=\"cursor-pointer\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\ntype ExtraMonthData = { date: Date };\n\ntype MonthlyBodyProps<MonthData> = {\n  /*\n    skip days, an array of days, starts at sunday (0), saturday is 6\n    ex: [0,6] would remove sunday and saturday from rendering\n  */\n  omitDays?: number[];\n  events: (MonthData & ExtraMonthData)[];\n\n  renderDay: (data: (MonthData & ExtraMonthData)[]) => ReactNode;\n};\n\ntype OmittedDaysProps = {\n  days: Date[];\n  omitDays?: number[];\n};\n\nconst handleOmittedDays = ({ days, omitDays }: OmittedDaysProps) => {\n  let headings = daysInWeek;\n  let daysToRender = days;\n\n  //omit the headings and days of the week that were passed in\n  if (omitDays) {\n    headings = daysInWeek.filter(day => !omitDays.includes(day.day));\n    daysToRender = days.filter(day => !omitDays.includes(getDay(day)));\n  }\n\n  // omit the padding if an omitted day was before the start of the month\n  let firstDayOfMonth = getDay(daysToRender[0]) as number;\n  if (omitDays) {\n    let subtractOmittedDays = omitDays.filter(day => day < firstDayOfMonth)\n      .length;\n    firstDayOfMonth = firstDayOfMonth - subtractOmittedDays;\n  }\n  let padding = new Array(firstDayOfMonth).fill(0);\n\n  return { headings, daysToRender, padding };\n};\n\n//to prevent these from being purged in production, we make a lookup object\nconst headingClasses = {\n  l3: 'lg:grid-cols-3',\n  l4: 'lg:grid-cols-4',\n  l5: 'lg:grid-cols-5',\n  l6: 'lg:grid-cols-6',\n  l7: 'lg:grid-cols-7',\n};\n\nexport function MonthlyBody<MonthData>({\n  omitDays,\n  events,\n  renderDay,\n}: MonthlyBodyProps<MonthData>) {\n  let { days } = useMonthlyCalendar();\n  let { headings, daysToRender, padding } = handleOmittedDays({\n    days,\n    omitDays,\n  });\n\n  let headingClassName = 'border-b-2 p-2 border-r-2 lg:block hidden';\n  return (\n    <div className=\"bg-white border-l-2 border-t-2\">\n      <div\n        className={`grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 ${\n          //@ts-ignore\n          headingClasses[`l${headings.length}`]\n        }`}\n      >\n        {headings.map(day => (\n          <div\n            key={day.day}\n            className={headingClassName}\n            aria-label=\"Day of Week\"\n          >\n            {day.label}\n          </div>\n        ))}\n        {padding.map((_, index) => (\n          <div\n            key={index}\n            className={headingClassName}\n            aria-label=\"Empty Day\"\n          />\n        ))}\n        {daysToRender.map(day => {\n          let dayData = events.filter(data => isSameDay(data.date, day));\n          let dayNumber = format(day, 'd');\n          return (\n            <div\n              key={day.toISOString()}\n              aria-label={`Events for day ${dayNumber}`}\n              className=\"h-48 p-2 border-b-2 border-r-2\"\n            >\n              <div className=\"flex justify-between\">\n                <div className=\"font-bold\">{dayNumber}</div>\n                <div className=\"lg:hidden block\">{format(day, 'EEEE')}</div>\n              </div>\n              <ul className=\"divide-gray-200 divide-y overflow-hidden max-h-36 overflow-y-auto\">\n                {renderDay(dayData)}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import {\n  startOfWeek,\n  format,\n  isSameDay,\n  getDay,\n  setDay,\n  isSameWeek,\n} from 'date-fns';\nimport React, {\n  CSSProperties,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { daysInWeek } from '../shared';\n\ntype State = {\n  week: Date;\n  selectedDay?: Date;\n  changeSelectedDay: (day?: Date) => any;\n};\n\nconst WeeklyContext = React.createContext<State>({} as State);\nexport const useWeeklyCalendar = () => useContext(WeeklyContext);\n\ntype WeeklyCalendarProps = {\n  week: Date;\n  children: ReactNode;\n};\n\nexport const WeeklyCalendar = ({ week, children }: WeeklyCalendarProps) => {\n  let [selectedDay, setSelectedDay] = useState<Date>();\n\n  //clear the selected day if the week changes\n  useEffect(() => {\n    setSelectedDay(undefined);\n  }, [week]);\n\n  return (\n    <WeeklyContext.Provider\n      value={{\n        selectedDay,\n        week: startOfWeek(week),\n        changeSelectedDay: setSelectedDay,\n      }}\n    >\n      {children}\n    </WeeklyContext.Provider>\n  );\n};\n\ntype WeeklyContainerProps = {\n  children: ReactNode;\n};\nexport const WeeklyContainer = ({ children }: WeeklyContainerProps) => {\n  return <div className=\"md:flex md:justify-between\">{children}</div>;\n};\n\ntype DayButtonProps = {\n  day: { day: number; label: string };\n};\n\nconst DayButton = ({ day }: DayButtonProps) => {\n  let { week, selectedDay, changeSelectedDay } = useWeeklyCalendar();\n  let isSelected = selectedDay ? getDay(selectedDay) === day.day : false;\n  let currentDate = setDay(week, day.day);\n  return (\n    <li\n      onClick={() => changeSelectedDay(isSelected ? undefined : currentDate)}\n      className=\"bg-white cursor-pointer\"\n      aria-label=\"Day of Week\"\n    >\n      <div\n        className={`rounded-lg border sm:w-36 text-center py-4 ${\n          isSelected\n            ? 'border-indigo-600'\n            : 'border-gray-300 hover:border-gray-500'\n        }`}\n      >\n        <p className=\"font-medium text-sm text-gray-800\">\n          {day.label} {format(currentDate, 'do')}\n        </p>\n      </div>\n    </li>\n  );\n};\n\ntype WeeklyDaysProps = {\n  omitDays?: number[];\n};\n\nexport const WeeklyDays = ({ omitDays }: WeeklyDaysProps) => {\n  let daysToRender = daysInWeek;\n\n  if (omitDays) {\n    daysToRender = daysInWeek.filter((day) => !omitDays.includes(day.day));\n  }\n  return (\n    <ul className=\"grid md:grid-cols-1 grid-cols-2 gap-2\">\n      {daysToRender.map((day) => (\n        <DayButton key={day.day} day={day} />\n      ))}\n    </ul>\n  );\n};\n\ntype RenderItemProps<EventItem> = {\n  item: EventItem & { date: Date };\n  /*\n    boolean indicating if a full week is being shwown\n    vs having a single day selected\n  */\n  showingFullWeek: boolean;\n};\n\ntype WeeklyBodyProps<EventItem> = {\n  style?: CSSProperties;\n  events: (EventItem & { date: Date })[];\n  renderItem: (item: RenderItemProps<EventItem>) => ReactNode;\n};\n\nexport function WeeklyBody<EventItem>({\n  events,\n  renderItem,\n  style,\n}: WeeklyBodyProps<EventItem>) {\n  let { week, selectedDay } = useWeeklyCalendar();\n  return (\n    <div className=\"overflow-auto max-h-96\" style={style}>\n      <ul className=\"divide-y divide-gray-200 \">\n        {events.map((item) => {\n          // If they select a single day, filter out events for different days\n          if (selectedDay) {\n            if (!isSameDay(selectedDay, item.date)) return null;\n          }\n          //if an event is for a different week, filter it out\n          if (!isSameWeek(week, item.date)) return null;\n\n          //return the remeaining events!\n          return renderItem({\n            item,\n            showingFullWeek: selectedDay === undefined,\n          });\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport const WeeklyResponsiveContainer = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  return <div className=\"border p-4 md:w-3/4 lg:w-1/2 w-full\">{children}</div>;\n};\n","import React from 'react';\n\n/*\n  Over time there may be more useful event item components that can be included\n  in the library\n*/\n\ntype DefaultEventItemProps = {\n  title: string;\n  date: string;\n};\n\nexport const DefaultMonthlyEventItem = ({\n  title,\n  date,\n}: DefaultEventItemProps) => {\n  return (\n    <li className=\"py-2\">\n      <div className=\"flex text-sm flex-1 justify-between\">\n        <h3 className=\"font-medium\">{title}</h3>\n        <p className=\"text-gray-500\">{date}</p>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\n\n/*\n  Over time there may be more useful event item components that can be included\n  in the library\n*/\n\ntype DefaultWeeklyEventItemProps = {\n  title: string;\n  date: string;\n};\n\nexport const DefaultWeeklyEventItem = ({\n  title,\n  date,\n}: DefaultWeeklyEventItemProps) => {\n  return (\n    <li className=\"py-4 w-72\">\n      <div className=\"text-sm flex justify-between\">\n        <h3 className=\"font-medium\">{title}</h3>\n        <p className=\"text-gray-500\">{date}</p>\n      </div>\n    </li>\n  );\n};\n"],"names":["daysInWeek","day","label","MonthlyCalendarContext","React","createContext","useMonthlyCalendar","useContext","headingClasses","l3","l4","l5","l6","l7","WeeklyContext","useWeeklyCalendar","DayButton","week","selectedDay","changeSelectedDay","isSelected","getDay","currentDate","setDay","onClick","undefined","className","format","date","title","omitDays","events","renderDay","days","headings","daysToRender","filter","includes","firstDayOfMonth","subtractOmittedDays","length","padding","Array","fill","handleOmittedDays","map","key","_","index","dayData","data","isSameDay","dayNumber","toISOString","onCurrentMonthChange","children","monthStart","startOfMonth","currentMonth","eachDayOfInterval","start","end","endOfMonth","Provider","value","subMonths","getYear","Date","addMonths","renderItem","style","item","isSameWeek","showingFullWeek","useState","setSelectedDay","useEffect","startOfWeek"],"mappings":"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"}