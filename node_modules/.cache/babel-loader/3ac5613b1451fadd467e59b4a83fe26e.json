{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Context\\\\Session.js\";\nimport React, { Component } from 'react'; // import { createBrowserHistory } from \"history\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SessionContext = /*#__PURE__*/React.createContext();\nSessionContext.displayName = 'SessionContext';\nexport class SessionContextProvider extends Component {\n  constructor(props) {\n    super(props); // this.history = createBrowserHistory();\n\n    this.componentDidMount = async event => {// let userInfo = localStorage.getItem('user-info')\n      // if(userInfo){\n      //     this.setState({session: true, manager: JSON.parse(userInfo)})\n      // }\n    };\n\n    this.setSession = (status, value) => {\n      if (status === 'success') {\n        this.setState({\n          session: true,\n          manager: value\n        });\n      } else {\n        this.setState({\n          session: false,\n          manager: []\n        });\n      }\n    };\n\n    this.state = {\n      session: false,\n      manager: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n      value: { ...this.state,\n        setSession: this.setSession\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default SessionContextProvider;","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Context/Session.js"],"names":["React","Component","SessionContext","createContext","displayName","SessionContextProvider","constructor","props","componentDidMount","event","setSession","status","value","setState","session","manager","state","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;AACA,OAAO,MAAMC,cAAc,gBAAGF,KAAK,CAACG,aAAN,EAAvB;AACPD,cAAc,CAACE,WAAf,GAA6B,gBAA7B;AAGA,OAAO,MAAMC,sBAAN,SAAqCJ,SAArC,CAA+C;AAClDK,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,SAWnBC,iBAXmB,GAWC,MAAMC,KAAN,IAAc,CAC9B;AACA;AACA;AACA;AAEH,KAjBkB;;AAAA,SAmBnBC,UAnBmB,GAmBN,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,UAAGD,MAAM,KAAK,SAAd,EAAwB;AACpB,aAAKE,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE,IAAV;AAAgBC,UAAAA,OAAO,EAAEH;AAAzB,SAAd;AACH,OAFD,MAGI;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE,KAAV;AAAiBC,UAAAA,OAAO,EAAE;AAA1B,SAAd;AACH;AAGJ,KA5BkB;;AAKf,SAAKC,KAAL,GAAa;AACTF,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAoBDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKD,KAAT;AAAgBN,QAAAA,UAAU,EAAE,KAAKA;AAAjC,OAAhC;AAAA,gBACK,KAAKH,KAAL,CAAWW;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApCiD;AAuCtD,eAAeb,sBAAf","sourcesContent":["import React, { Component } from 'react'\r\n// import { createBrowserHistory } from \"history\";\r\nexport const SessionContext = React.createContext();\r\nSessionContext.displayName = 'SessionContext';\r\n\r\n\r\nexport class SessionContextProvider extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        // this.history = createBrowserHistory();\r\n\r\n        this.state = {\r\n            session: false,\r\n            manager: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount = async event =>{\r\n        // let userInfo = localStorage.getItem('user-info')\r\n        // if(userInfo){\r\n        //     this.setState({session: true, manager: JSON.parse(userInfo)})\r\n        // }\r\n        \r\n    }\r\n    \r\n    setSession = (status, value) => {\r\n        if(status === 'success'){\r\n            this.setState({session: true, manager: value})\r\n        }\r\n        else{\r\n            this.setState({session: false, manager: []})\r\n        }\r\n        \r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <SessionContext.Provider value={{...this.state, setSession: this.setSession}}>\r\n                {this.props.children}\r\n            </SessionContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SessionContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}