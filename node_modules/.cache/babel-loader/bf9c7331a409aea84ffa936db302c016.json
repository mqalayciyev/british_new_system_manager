{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\MyTasks\\\\MyTasks.js\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport Add from './Add';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Datatables from '../Datatables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MyTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.removeComponent = () => {\n      this.setState({\n        modal: []\n      });\n    };\n\n    this.addComponent = value => {\n      let edit = 0;\n      let data = {};\n\n      if (value) {\n        edit = value.id;\n        data = value;\n      }\n\n      let modal = /*#__PURE__*/_jsxDEV(Add, {\n        edit: edit,\n        data: data,\n        load: this.load,\n        removeComponent: this.removeComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.changeStatus = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/tasks/status/${id}`); // console.log(response.data)\n\n      if (response.data.status === 'success') {\n        NotificationManager.success('Task statusu deyisdirildi', 'Success', 5000);\n        this.load();\n      } else {\n        NotificationManager.error('Xeta bas verdi', 'Error', 5000);\n      }\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/tasks`);\n\n      if (response.data.status === 'success') {\n        this.setState({\n          tasks: response.data.tasks,\n          delete: userInfo.user.user_info.type === 1 ? true : false,\n          display: false\n        });\n      }\n    };\n\n    this.delete = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/tasks/${id}`);\n\n      if (response.data.status === 'success') {\n        NotificationManager.warning(response.data.message, 'Warning', 5000);\n        this.load();\n      }\n    };\n\n    this.buttons = value => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: '250px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-success\",\n          onClick: () => this.changeStatus(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 103\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-warning\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModal\",\n          onClick: () => this.addComponent(this.state.tasks.filter(element => element.id === value.id)[0]),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pencil-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 193\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this), this.state.delete ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-danger\",\n          onClick: () => this.delete(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 118\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 39\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.date = value => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Start:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: [value.start_date, \", \", value.start_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), \"End:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [value.end_date, \", \", value.end_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      tasks: [],\n      display: true\n    };\n  }\n\n  render() {\n    const columns = [{\n      name: 'Execution date',\n      selector: row => this.date(row)\n    }, {\n      name: 'Description',\n      selector: row => row.note\n    }, {\n      name: 'Client',\n      sortable: true,\n      selector: row => row.client\n    }, {\n      name: 'Client Contact',\n      selector: row => row.email\n    }, {\n      name: 'Purpose',\n      sortable: true,\n      selector: row => row.purpose\n    }, {\n      name: '',\n      selector: row => this.buttons(row)\n    }];\n    const data = [];\n\n    if (this.state.tasks.length > 0) {\n      this.state.tasks.map((value, index) => {\n        data.push({\n          id: value.id,\n          note: value.note,\n          client: value.client,\n          address: value.address,\n          email: value.email,\n          owner: value.owner,\n          purpose: value.purpose,\n          source: value.source,\n          created_at: value.created_at\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"My Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/\",\n                className: this.props.page === 'actual' ? 'btn btn-info active' : 'btn btn-info',\n                children: \"Actual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/TasksCompleted\",\n                className: \"btn btn-info ml-2\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-info\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#exampleModal\",\n                onClick: () => this.addComponent(),\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                style: {\n                  display: this.state.display ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive bg-white m-0 p-3 rounded shadow\",\n                children: [/*#__PURE__*/_jsxDEV(Datatables, {\n                  columns: columns,\n                  data: data,\n                  pending: this.state.display,\n                  filter: `note`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-bordered m-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Execution date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Client\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Client Contact\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Purpose\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 12\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 10\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: this.state.tasks.length > 0 ? this.state.tasks.map((value, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.note\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.client\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            children: value.mobile\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 223,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: value.email\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.purpose\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"btnTD text-center\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 57\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 53\n                      }, this);\n                    }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: \"12\",\n                        className: \"text-center\",\n                        children: \"Empty\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 10\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 4\n      }, this), this.state.modal]\n    }, void 0, true);\n  }\n\n}\n\nexport default MyTasks;","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/MyTasks/MyTasks.js"],"names":["React","NavLink","Add","axios","NotificationContainer","NotificationManager","Datatables","MyTasks","Component","constructor","props","componentDidMount","load","removeComponent","setState","modal","addComponent","value","edit","data","id","changeStatus","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","post","process","env","REACT_APP_API_URL","status","success","name","get","tasks","delete","user_info","type","display","warning","message","buttons","minWidth","state","filter","element","date","start_date","start_time","end_date","end_time","render","columns","selector","row","note","sortable","client","email","purpose","length","map","index","push","address","owner","source","created_at","page","mobile"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink  } from \"react-router-dom\";\r\nimport Add from './Add';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Datatables from '../Datatables';\r\n\r\n\r\nclass MyTasks extends React.Component {\r\n\tconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tasks: [],\r\n            display: true,\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    removeComponent = () => {\r\n        this.setState({\r\n            modal: []\r\n        })\r\n    }\r\n    addComponent = (value) => {\r\n        let edit = 0\r\n        let data = {}\r\n        if (value) {\r\n            edit = value.id\r\n            data = value\r\n        }\r\n\r\n        let modal = <Add edit={edit} data={data} load={this.load} removeComponent={this.removeComponent} />\r\n\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    changeStatus = async (id) => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/tasks/status/${id}`)\r\n        // console.log(response.data)\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.success('Task statusu deyisdirildi', 'Success', 5000);\r\n            this.load()\r\n        }\r\n        else{\r\n            NotificationManager.error('Xeta bas verdi', 'Error', 5000);\r\n        }\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/tasks`)\r\n        if (response.data.status === 'success') {\r\n            this.setState({\r\n                tasks: response.data.tasks,\r\n                delete: userInfo.user.user_info.type === 1 ? true : false,\r\n                display: false\r\n            })\r\n        }\r\n    }\r\n    delete = async id => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/tasks/${id}`)\r\n\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.warning(response.data.message, 'Warning', 5000);\r\n            this.load()\r\n        }\r\n    }\r\n    buttons = (value) => {\r\n        return (\r\n            <div style={{ minWidth: '250px' }}>\r\n                <button className=\"btn Btn32 btn-success\" onClick={() => this.changeStatus(value.id)}><i className=\"far fa-thumbs-up\"></i></button>\r\n\t\t\t\t<button className=\"btn Btn32 btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent(this.state.tasks.filter(element => element.id === value.id)[0])}><i className=\"fas fa-pencil-alt\"></i></button>\r\n                { this.state.delete ? <button className=\"btn Btn32 btn-danger\" onClick={() => this.delete(value.id)}><i className=\"fas fa-trash\"></i></button> : '' }\r\n            </div>\r\n        )\r\n    }\r\n    date = (value) => {\r\n        return(\r\n            <>\r\n                Start: \r\n                <p className=\"text-success\">{value.start_date}, {value.start_time}</p>\r\n                End: \r\n                <p className=\"text-danger\">{value.end_date}, {value.end_time}</p>\r\n            </>\r\n        )\r\n    }\r\n\trender() {\r\n        const columns = [\r\n            {\r\n                name: 'Execution date',\r\n                \r\n                selector: row => this.date(row),\r\n            },\r\n            {\r\n                name: 'Description',\r\n                selector: row => row.note,\r\n            },\r\n            {\r\n                name: 'Client',\r\n                sortable: true,\r\n                selector: row => row.client,\r\n            },\r\n            {\r\n                name: 'Client Contact',\r\n                selector: row => row.email,\r\n            },\r\n            {\r\n                name: 'Purpose',\r\n                sortable: true,\r\n                selector: row => row.purpose,\r\n            },\r\n            {\r\n                name: '',\r\n                selector: row => this.buttons(row),\r\n            },\r\n        ];\r\n        const data = []\r\n        if(this.state.tasks.length > 0)\r\n        {\r\n            this.state.tasks.map((value, index) => {\r\n                data.push({ \r\n                    id: value.id, \r\n                    note: value.note, \r\n                    client: value.client, \r\n                    address:  value.address,  \r\n                    email: value.email, \r\n                    owner: value.owner, \r\n                    purpose: value.purpose, \r\n                    source: value.source, \r\n                    created_at: value.created_at,\r\n                })\r\n            })\r\n        }\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n            <NotificationContainer />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<h4>My Tasks</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t<NavLink to=\"/\" className={(this.props.page === 'actual') ? 'btn btn-info active' : 'btn btn-info'}>Actual</NavLink>\r\n\t\t\t\t\t\t\t<NavLink to=\"/TasksCompleted\" className=\"btn btn-info ml-2\">Completed</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6\" align='right'>\r\n\t\t\t\t\t\t\t{/* <NavLink to=\"/SchedulingCalendar\" className=\"btn btn-info mx-2\">Calendar</NavLink> */}\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent()}>Add task</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n                        <div className=\"loading\" style={{ display: this.state.display ? 'block' : 'none' }}>\r\n                            <div className=\"text-center\">\r\n                                <span>\r\n                                    Loading...\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\t\t\t\t\t\t\t<div className=\"table-responsive bg-white m-0 p-3 rounded shadow\">\r\n                                <Datatables columns={columns} data={data} pending={this.state.display} filter={`note`}/>\r\n\t\t\t\t\t\t\t\t<table className=\"table table-bordered m-0\">\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Execution date</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Description</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Client</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Client Contact</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Purpose</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"></th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{this.state.tasks.length > 0 ? this.state.tasks.map((value, index) => {\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.note}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.client}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <p>{value.mobile}</p>\r\n                                                            <p>{value.email}</p>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                        {value.purpose}\r\n                                                        </td>\r\n                                                        <td className=\"btnTD text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }) :\r\n                                                <tr>\r\n                                                    <td colSpan=\"12\" className=\"text-center\">\r\n                                                        Empty\r\n                                                        </td>\r\n                                                </tr>\r\n                                            }\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n                    this.state.modal\r\n                }\r\n\t\t\t</>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default MyTasks;"]},"metadata":{},"sourceType":"module"}