{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Profile\\\\ImageUpload.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { SessionContext } from \"../../Context/Session\";\nimport \"croppie/croppie.css\"; // import { Button, Grid } from \"@material-ui/core\"\n\nimport Croppie from \"croppie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst userInfo = JSON.parse(localStorage.getItem('user-info'));\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${userInfo.user.token}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      var c = new Croppie(document.getElementById('image-helper'), {\n        viewport: {\n          width: 400,\n          height: 400,\n          type: 'square'\n        },\n        boundary: {\n          width: 410,\n          height: 410\n        }\n      });\n      this.setState({\n        croppie: c\n      });\n    };\n\n    this.handleImage = event => {\n      let image = URL.createObjectURL(event.target.files[0]);\n      this.setState({\n        image\n      });\n      let c = this.state.croppie;\n      c.bind({\n        url: image\n      });\n      this.setState({\n        croppie: c\n      });\n    };\n\n    this.onConfirm = async (link, file) => {\n      let formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"id\", userInfo.user.user_id);\n      let response = await axios.post(`http://127.0.0.1:8000/api/managers/manager/${link}`, formData);\n      console.log(response.data);\n\n      if (response.data.status === 'success') {\n        NotificationManager.success('Məlumatlar dəyişdirildi.', 'Success', 5000);\n\n        if (response.data.user) {\n          userInfo['user']['user_info'] = response.data.user;\n          localStorage.setItem('user-info', JSON.stringify(userInfo));\n          this.context.setSession(response.data.status, userInfo);\n          this.props.setImage(response.data.image);\n        }\n      }\n\n      if (response.data.status === 'error') {\n        let message = response.data.message;\n\n        for (const [key, value] of Object.entries(message)) {\n          NotificationManager.error(value, 'Error', 5000);\n        } // this.setState({ formData: {} })\n\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.croppie !== null) {\n        this.state.croppie.result({\n          type: 'blob',\n          size: {\n            width: 500,\n            height: 500\n          }\n        }).then(blob => {\n          this.onConfirm('add_image', blob);\n        });\n      }\n    };\n\n    this.onCancel = () => {\n      let c = this.state.croppie;\n      c.bind({\n        url: ''\n      });\n      this.setState({\n        croppie: c\n      });\n      this.setState({\n        image: ''\n      });\n    };\n\n    const _userInfo = localStorage.getItem('user-info');\n\n    const user = JSON.parse(_userInfo);\n    this.state = {\n      croppie: null,\n      image: '',\n      delete: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal fade bd-example-modal-lg\",\n        id: \"imageUpload\",\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"imageUploadLabel\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-dialog modal-lg\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"modal-title\",\n                  id: \"imageUploadLabel\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"close\",\n                  \"data-dismiss\": \"modal\",\n                  \"aria-label\": \"Close\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    \"aria-hidden\": \"true\",\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"modal-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"image-helper\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: this.handleImage,\n                  id: \"cover_image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"modal-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"reset\",\n                  class: \"btn btn-secondary\",\n                  \"data-dismiss\": \"modal\",\n                  onClick: this.onCancel,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  class: \"btn btn-primary\",\n                  children: \"Save changes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nImageUpload.contextType = SessionContext;\nexport default ImageUpload;","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Profile/ImageUpload.js"],"names":["React","useState","useEffect","axios","NotificationContainer","NotificationManager","SessionContext","Croppie","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","ImageUpload","Component","constructor","props","componentDidMount","c","document","getElementById","viewport","width","height","type","boundary","setState","croppie","handleImage","event","image","URL","createObjectURL","target","files","state","bind","url","onConfirm","link","file","formData","FormData","append","user_id","response","post","console","log","data","status","success","setItem","stringify","context","setSession","setImage","message","key","value","Object","entries","handleSubmit","preventDefault","result","size","then","blob","onCancel","delete","render","contextType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { SessionContext } from \"../../Context/Session\";\r\n\r\nimport \"croppie/croppie.css\";\r\n// import { Button, Grid } from \"@material-ui/core\"\r\nimport Croppie from \"croppie\";\r\n\r\nconst userInfo = JSON.parse(localStorage.getItem('user-info'))\r\naxios.interceptors.request.use(\r\n    config => {\r\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\n\r\nclass ImageUpload extends React.Component {\r\n    static contextType = SessionContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const userInfo = localStorage.getItem('user-info')\r\n        const user = JSON.parse(userInfo)\r\n\r\n        this.state = {\r\n            croppie: null,\r\n            image: '',\r\n            delete: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        var c = new Croppie(document.getElementById('image-helper'), {\r\n            viewport: {\r\n                width: 400,\r\n                height: 400,\r\n                type: 'square'\r\n            },\r\n            boundary: {\r\n                width: 410,\r\n                height: 410,\r\n            }\r\n        });\r\n\r\n        this.setState({ croppie: c })\r\n    }\r\n    handleImage = (event) => {\r\n        let image = URL.createObjectURL(event.target.files[0])\r\n        this.setState({ image })\r\n        let c = this.state.croppie;\r\n        c.bind({\r\n            url: image,\r\n        });\r\n        this.setState({ croppie: c })\r\n    }\r\n    onConfirm = async (link, file) => {\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"file\", file)\r\n\r\n        formData.append(\"id\", userInfo.user.user_id)\r\n\r\n        let response = await axios.post(`http://127.0.0.1:8000/api/managers/manager/${link}`, formData)\r\n\r\n        console.log(response.data)\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.success('Məlumatlar dəyişdirildi.', 'Success', 5000);\r\n            if (response.data.user) {\r\n                userInfo['user']['user_info'] = response.data.user;\r\n                localStorage.setItem('user-info', JSON.stringify(userInfo))\r\n                this.context.setSession(response.data.status, userInfo)\r\n                this.props.setImage(response.data.image)\r\n            }\r\n        }\r\n        if (response.data.status === 'error') {\r\n            let message = response.data.message;\r\n            for (const [key, value] of Object.entries(message)) {\r\n                NotificationManager.error(value, 'Error', 5000);\r\n            }\r\n            // this.setState({ formData: {} })\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.state.croppie !== null) {\r\n            this.state.croppie.result({\r\n                type: 'blob',\r\n                size: {\r\n                    width: 500,\r\n                    height: 500\r\n                }\r\n            }).then((blob) => {\r\n                this.onConfirm('add_image', blob)\r\n            }\r\n            )\r\n        }\r\n    }\r\n    onCancel = () => {\r\n        let c = this.state.croppie;\r\n        c.bind({\r\n            url: '',\r\n        });\r\n        this.setState({ croppie: c })\r\n        this.setState({ image: '' })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div class=\"modal fade bd-example-modal-lg\" id=\"imageUpload\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"imageUploadLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title\" id=\"imageUploadLabel\">Edit</h5>\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <div id=\"image-helper\"></div>\r\n                                    <input type=\"file\" accept=\"image/*\" onChange={this.handleImage} id=\"cover_image\"></input>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"reset\" class=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.onCancel}>Close</button>\r\n                                    <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}