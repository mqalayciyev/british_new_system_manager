{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\OnlineTutoring\\\\Modals\\\\Questions.js\";\nimport React, { Component } from 'react';\nimport AddQuestion from './AddQuestion';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`http://127.0.0.1:8000/api/managers/questions/${this.props}`);\n\n      if (response.data.status === 'success') {\n        console.log(response.data);\n        this.setState({\n          questions: response.data.questions\n        });\n      }\n    };\n\n    this.click = e => {\n      if (e.target.classList.contains('hide-modal')) {\n        this.props.removeComponent();\n      }\n    };\n\n    this.removeComponent = () => {\n      document.getElementById('questionsModal').style.overflow = 'auto';\n      this.setState({\n        add: []\n      });\n    };\n\n    this.addQuestionComponent = (data, test_id) => {\n      let add = /*#__PURE__*/_jsxDEV(AddQuestion, {\n        test_id: test_id,\n        edit: data.id ? data.id : 0,\n        data: data,\n        removeComponent: this.removeComponent,\n        load: this.load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this);\n\n      this.setState({\n        add: add\n      });\n    };\n\n    this.deleteQuestionComponent = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.delete(`http://127.0.0.1:8000/api/managers/questions/${id}`);\n      console.log(response.data);\n\n      if (response.data.status === 'success') {\n        NotificationManager.warning('Sual silindi.', 'Warning', 5000);\n        this.load();\n      }\n\n      if (response.data.status === 'error') {\n        let message = response.data.message;\n\n        for (const [key, value] of Object.entries(message)) {\n          NotificationManager.error(value, 'Error', 5000);\n        }\n      }\n    };\n\n    this.state = {\n      add: [],\n      questions: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal fade hide-modal bd-example-modal-lg\",\n        id: \"questionsModal\",\n        onClick: this.click,\n        tabindex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"questionsModalLabel\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-dialog modal-lg hide-modal\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"questionsModalLabel\",\n                className: \"btn btn-success modal-title\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#addQuestionModal\",\n                onClick: () => this.addQuestionComponent({}, this.props.id),\n                children: [\"Add Question \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 232\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"close hide-modal\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"hide-modal\",\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"accordion\",\n                id: \"accordionPanelsStayOpenExample\",\n                children: this.state.questions.length > 0 ? this.state.questions.map((value, index) => {\n                  let data = value;\n                  const answers = JSON.parse(value.answers);\n\n                  for (let i = 0; i < answers.length; i++) {\n                    data[answers[i].answer_title] = answers[i].answer;\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"card-header bg-secondary\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"row justify-content-between align-items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: value.question\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            id: \"questionsModalLabel\",\n                            className: \"btn btn-success modal-title ml-auto mr-2\",\n                            \"data-toggle\": \"modal\",\n                            \"data-target\": \"#addQuestionModal\",\n                            onClick: () => this.addQuestionComponent(data, this.props.id),\n                            children: [\"Edit Question \", /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-plus\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 110,\n                              columnNumber: 276\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 110,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-danger ml-auto\",\n                            onClick: () => this.deleteQuestionComponent(data.id),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-trash\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 111,\n                              columnNumber: 158\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 111,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 109,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      class: \"list-group list-group-flush\",\n                      children: answers.map((v, i) => {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          class: \"list-group-item\",\n                          children: [v.true ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            class: \"fas fa-check text-success\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 119,\n                            columnNumber: 111\n                          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                            class: \"fas fa-times text-danger\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 119,\n                            columnNumber: 154\n                          }, this), \" \", v.answer]\n                        }, i, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 119,\n                          columnNumber: 65\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 45\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-center\",\n                  children: \"Empty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-secondary hide-modal\",\n                \"data-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), this.state.add]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/OnlineTutoring/Modals/Questions.js"],"names":["React","Component","AddQuestion","axios","NotificationContainer","NotificationManager","Questions","constructor","props","componentDidMount","load","name","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","get","data","status","console","log","setState","questions","click","e","target","classList","contains","removeComponent","document","getElementById","style","overflow","add","addQuestionComponent","test_id","id","deleteQuestionComponent","delete","warning","message","key","value","Object","entries","state","render","length","map","index","answers","i","answer_title","answer","question","v","true"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AddQuestion from './AddQuestion'\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport default class Questions extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            add: [],\r\n            questions: []\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`http://127.0.0.1:8000/api/managers/questions/${this.props}`)\r\n        if (response.data.status === 'success') {\r\n            console.log(response.data)\r\n            this.setState({\r\n                questions: response.data.questions\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    click = (e) => {\r\n        if (e.target.classList.contains('hide-modal')) {\r\n            this.props.removeComponent()\r\n        }\r\n    }\r\n    removeComponent = () => {\r\n        document.getElementById('questionsModal').style.overflow = 'auto'\r\n        this.setState({\r\n            add: []\r\n        })\r\n    }\r\n    addQuestionComponent = (data, test_id) => {\r\n        let add = <AddQuestion test_id={test_id} edit={data.id ? data.id : 0} data={data} removeComponent={this.removeComponent} load={this.load} />\r\n        this.setState({\r\n            add: add\r\n        })\r\n    }\r\n    deleteQuestionComponent = async (id) => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.delete(`http://127.0.0.1:8000/api/managers/questions/${id}`)\r\n        console.log(response.data)\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.warning('Sual silindi.', 'Warning', 5000);\r\n            this.load()\r\n        }\r\n        if (response.data.status === 'error') {\r\n            let message = response.data.message;\r\n            for (const [key, value] of Object.entries(message)) {\r\n                NotificationManager.error(value, 'Error', 5000);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            <NotificationContainer />\r\n                <div class=\"modal fade hide-modal bd-example-modal-lg\" id=\"questionsModal\" onClick={this.click} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"questionsModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-lg hide-modal\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <button id=\"questionsModalLabel\" className=\"btn btn-success modal-title\" data-toggle=\"modal\" data-target=\"#addQuestionModal\" onClick={() => this.addQuestionComponent({}, this.props.id)}>Add Question <i class=\"fas fa-plus\"></i></button>\r\n                                <button type=\"button\" class=\"close hide-modal\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span className=\"hide-modal\" aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n\r\n                                <div class=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n                                    {this.state.questions.length > 0 ? this.state.questions.map((value, index) => {\r\n                                        let data = value\r\n                                        \r\n                                        const answers = JSON.parse(value.answers)\r\n                                        for(let i = 0; i<answers.length; i++){\r\n                                            data[answers[i].answer_title] = answers[i].answer\r\n                                        }\r\n                                        return (\r\n                                            <div class=\"card\" key={index}>\r\n                                                <div class=\"card-header bg-secondary\">\r\n                                                    <div className=\"row justify-content-between align-items-center\">\r\n                                                        <span>{value.question}</span>\r\n                                                        <div>\r\n                                                            <button id=\"questionsModalLabel\" className=\"btn btn-success modal-title ml-auto mr-2\" data-toggle=\"modal\" data-target=\"#addQuestionModal\" onClick={() => this.addQuestionComponent(data, this.props.id)}>Edit Question <i class=\"fas fa-plus\"></i></button>\r\n                                                            <button className=\"btn btn-danger ml-auto\" onClick={() => this.deleteQuestionComponent(data.id)}><i class=\"fas fa-trash\"></i></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <ul class=\"list-group list-group-flush\">\r\n                                                    {\r\n                                                        answers.map((v, i) => {\r\n                                                            return (\r\n                                                                <li key={i} class=\"list-group-item\">{v.true ? <i class=\"fas fa-check text-success\"></i> :<i class=\"fas fa-times text-danger\"></i>} {v.answer}</li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </div>\r\n                                        )\r\n                                    }) : <h4 className=\"text-center\">Empty</h4>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-secondary hide-modal\" data-dismiss=\"modal\">Close</button>\r\n                                {/* <button type=\"button\" class=\"btn btn-primary\">Save changes</button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.add\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}