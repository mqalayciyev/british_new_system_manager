{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Company\\\\CompanyAnnouncements.js\";\nimport React, { Component } from 'react';\nimport AddAnnouncements from './Modals/AddAnnouncements';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Datatables from '../Datatables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class CompanyAnnouncements extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/announcements`);\n\n      if (response.data.status === 'success') {\n        this.setState({\n          announcements: response.data.announcements,\n          delete: userInfo.user.user_info.type === 1 ? true : false,\n          display: false\n        });\n      }\n    };\n\n    this.removeComponent = () => {\n      this.setState({\n        modal: []\n      });\n    };\n\n    this.addComponent = value => {\n      console.log(value);\n      let edit = 0;\n      let data = {};\n\n      if (value) {\n        edit = value.id;\n        data = value;\n      }\n\n      let modal = /*#__PURE__*/_jsxDEV(AddAnnouncements, {\n        edit: edit,\n        data: data,\n        load: this.load,\n        removeComponent: this.removeComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.delete = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/announcements/${id}`);\n\n      if (response.data.status === 'success') {\n        NotificationManager.warning(response.data.message, 'Warning', 5000);\n        this.load();\n      }\n    };\n\n    this.buttons = row => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: '380px'\n        },\n        children: this.state.delete ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn Btn32 btn-warning mx-1\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#exampleModal\",\n            onClick: () => this.addComponent(row),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-pencil-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 155\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn Btn32 btn-danger\",\n            onClick: () => this.delete(row.id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 98\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      announcements: [],\n      display: true\n    };\n  }\n\n  render() {\n    const role = ['', 'Manager', 'Teacher', 'Student', 'Coordinator'];\n    const status = ['Resigned', 'Works', 'Intern', 'On Holiday'];\n    const columns = [{\n      name: 'Image',\n      selector: row => row.image\n    }, {\n      name: 'Full name',\n      sortable: true,\n      selector: row => row.name\n    }, {\n      name: 'Mobile',\n      selector: row => row.mobile\n    }, {\n      name: 'Address',\n      selector: row => row.address\n    }, {\n      name: 'Email',\n      selector: row => row.email\n    }, {\n      name: 'Role',\n      selector: row => row.role\n    }, {\n      name: 'Office',\n      selector: row => row.office\n    }, {\n      name: 'Status',\n      selector: row => row.status\n    }, {\n      name: 'Created at',\n      sortable: true,\n      selector: row => row.created_at\n    }, {\n      name: '',\n      selector: row => this.buttons(row)\n    }];\n    const data = [];\n\n    if (this.state.managers.length > 0) {\n      this.state.managers.map((value, index) => {\n        data.push({\n          id: value.id,\n          value: value,\n          // image: <img className=\"rounded-circle h-100 w-100\" style={{ maxWidth: '100px', maxHeight: '100px' }} src={value.image ? process.env.REACT_APP_URL + '/' + value.image : img} alt='account' />,\n          title: value.first_name + ' ' + value.last_name,\n          name: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/User/${value.id}`,\n            children: [value.first_name, \" \", value.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 27\n          }, this),\n          mobile: value.mobile,\n          address: value.address,\n          email: value.email,\n          role: role[value.type],\n          office: value.name,\n          status: status[value.status],\n          created_at: value.created_at\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Company announcements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6 clearfix\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-info  float-right\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#exampleModal\",\n                onClick: () => this.addComponent(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                style: {\n                  display: this.state.display ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white m-0 p-3 rounded shadow\",\n                children: [/*#__PURE__*/_jsxDEV(Datatables, {\n                  columns: columns,\n                  data: data,\n                  pending: this.state.display,\n                  filter: `title`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                  class: \"table table-bordered m-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Added date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Created by\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Body\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Share With\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: this.state.announcements.length > 0 ? this.state.announcements.map((value, index) => {\n                      const share_with = [];\n\n                      if (value.manager) {\n                        share_with.push({\n                          value: 2,\n                          label: 'Manager'\n                        });\n                      }\n\n                      if (value.teacher) {\n                        share_with.push({\n                          value: 3,\n                          label: 'Teacher'\n                        });\n                      }\n\n                      if (value.student) {\n                        share_with.push({\n                          value: 4,\n                          label: 'Student'\n                        });\n                      }\n\n                      value['share_with'] = share_with;\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.updated_at\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.user_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 214,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.note\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [value.teacher ? /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"m-0\",\n                            children: \"Teacher\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 80\n                          }, this) : null, value.manager ? /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"m-0\",\n                            children: \"Manager\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 222,\n                            columnNumber: 80\n                          }, this) : null, value.student ? /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"m-0\",\n                            children: \"Student\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 223,\n                            columnNumber: 80\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"btnTD text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn Btn32 btn-warning mx-1\",\n                            \"data-toggle\": \"modal\",\n                            \"data-target\": \"#exampleModal\",\n                            onClick: () => this.addComponent(value),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-pencil-alt\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 226,\n                              columnNumber: 197\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 226,\n                            columnNumber: 61\n                          }, this), this.state.delete ? /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn Btn32 btn-danger\",\n                            onClick: () => this.delete(value.id),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-trash\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 228,\n                              columnNumber: 164\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 228,\n                            columnNumber: 85\n                          }, this) : '']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 57\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 53\n                      }, this);\n                    }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: \"12\",\n                        className: \"text-center\",\n                        children: \"Empty\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), this.state.modal]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Company/CompanyAnnouncements.js"],"names":["React","Component","AddAnnouncements","axios","NotificationContainer","NotificationManager","Datatables","CompanyAnnouncements","constructor","props","componentDidMount","load","name","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","get","process","env","REACT_APP_API_URL","data","status","setState","announcements","delete","user_info","type","display","removeComponent","modal","addComponent","value","console","log","edit","id","warning","message","buttons","row","minWidth","state","render","role","columns","selector","image","sortable","mobile","address","email","office","created_at","managers","length","map","index","push","title","first_name","last_name","share_with","manager","label","teacher","student","updated_at","user_name","note"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AddAnnouncements from './Modals/AddAnnouncements'\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Datatables from '../Datatables';\r\n\r\nexport default class CompanyAnnouncements extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            announcements: [],\r\n            display: true\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/announcements`)\r\n        if (response.data.status === 'success') {\r\n            this.setState({\r\n                announcements: response.data.announcements,\r\n                delete: userInfo.user.user_info.type === 1 ? true : false,\r\n                display: false\r\n            })\r\n        }\r\n\r\n    }\r\n    removeComponent = () => {\r\n        this.setState({\r\n            modal: []\r\n        })\r\n    }\r\n    addComponent = (value) => {\r\n        console.log(value)\r\n        let edit = 0\r\n        let data = {}\r\n        if (value) {\r\n            edit = value.id\r\n            data = value\r\n        }\r\n\r\n        let modal = <AddAnnouncements edit={edit} data={data} load={this.load} removeComponent={this.removeComponent} />\r\n\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    delete = async id => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/announcements/${id}`)\r\n\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.warning(response.data.message, 'Warning', 5000);\r\n            this.load()\r\n        }\r\n    }\r\n    buttons = (row) => {\r\n        return (\r\n            <div style={{ minWidth: '380px' }}>\r\n                {/* <Link to={`/Messages/Chat/${row.id}`} className=\"btn Btn32 btn-success mx-1\"><i class=\"fas fa-comment\"></i></Link> */}\r\n                \r\n                { this.state.delete ? (\r\n                    <>\r\n                    <button className=\"btn Btn32 btn-warning mx-1\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent(row)}><i class=\"fas fa-pencil-alt\"></i></button>\r\n                    <button className=\"btn Btn32 btn-danger\" onClick={() => this.delete(row.id)}><i class=\"fas fa-trash\"></i></button>\r\n                    </>\r\n                ) : '' }\r\n            </div>\r\n        )\r\n    }  \r\n    render() {\r\n        const role = ['', 'Manager', 'Teacher', 'Student', 'Coordinator']\r\n        const status = ['Resigned', 'Works', 'Intern', 'On Holiday']\r\n        const columns = [\r\n            {\r\n                name: 'Image',\r\n                selector: row => row.image,\r\n            },\r\n            {\r\n                name: 'Full name',\r\n                sortable: true,\r\n                selector: row => row.name,\r\n            },\r\n            {\r\n                name: 'Mobile',\r\n                selector: row => row.mobile,\r\n            },\r\n            {\r\n                name: 'Address',\r\n                selector: row => row.address,\r\n            },\r\n            {\r\n                name: 'Email',\r\n                selector: row => row.email,\r\n            },\r\n            {\r\n                name: 'Role',\r\n                selector: row => row.role,\r\n            },\r\n            {\r\n                name: 'Office',\r\n                selector: row => row.office,\r\n            },\r\n            {\r\n                name: 'Status',\r\n                selector: row => row.status,\r\n            },\r\n            {\r\n                name: 'Created at',\r\n                sortable: true,\r\n                selector: row => row.created_at,\r\n            },\r\n            {\r\n                name: '',\r\n                selector: row => this.buttons(row),\r\n            },\r\n        ];\r\n        const data = []\r\n        if(this.state.managers.length > 0)\r\n        {\r\n            this.state.managers.map((value, index) => {\r\n                data.push({ \r\n                    id: value.id, \r\n                    value: value, \r\n                    // image: <img className=\"rounded-circle h-100 w-100\" style={{ maxWidth: '100px', maxHeight: '100px' }} src={value.image ? process.env.REACT_APP_URL + '/' + value.image : img} alt='account' />,\r\n                    title: value.first_name + ' ' +value.last_name, \r\n                    name: <Link to={`/User/${value.id}`} >{value.first_name} {value.last_name}</Link>, \r\n                    mobile: value.mobile, \r\n                    address:  value.address,  \r\n                    email: value.email, \r\n                    role: role[value.type], \r\n                    office: value.name, \r\n                    status: status[value.status], \r\n                    created_at: value.created_at,\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h4>Company announcements</h4>\r\n                            </div>\r\n                            <div className=\"col-12 col-sm-6 clearfix\">\r\n                                <button type=\"button\" class=\"btn btn-info  float-right\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent()}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                            <div className=\"loading\" style={{ display: this.state.display ? 'block' : 'none' }}>\r\n                            <div className=\"text-center\">\r\n                                <span>\r\n                                    Loading...\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bg-white m-0 p-3 rounded shadow\">\r\n                                    <Datatables columns={columns} data={data} pending={this.state.display} filter={`title`}/>\r\n                                    <table class=\"table table-bordered m-0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Added date</th>\r\n                                                <th scope=\"col\">Created by</th>\r\n                                                <th scope=\"col\">Body</th>\r\n                                                <th scope=\"col\">Share With</th>\r\n                                                <th scope=\"col\"></th>\r\n                                                {/* <th scope=\"col\"><button className=\"btn Btn32 text-danger\"><i class=\"fas fa-trash\"></i></button></th> */}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.announcements.length > 0 ? this.state.announcements.map((value, index) => {\r\n                                                const share_with = []\r\n                                                if (value.manager) {\r\n                                                    share_with.push({ value: 2, label: 'Manager' })\r\n                                                }\r\n                                                if (value.teacher) {\r\n                                                    share_with.push({ value: 3, label: 'Teacher' })\r\n                                                }\r\n                                                if (value.student) {\r\n                                                    share_with.push({ value: 4, label: 'Student' })\r\n                                                }\r\n                                                value['share_with'] = share_with\r\n                                                return (\r\n                                                    <tr key={index}>\r\n                                                        <td>\r\n                                                            {value.updated_at}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.user_name}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.note}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {(value.teacher) ? <p className=\"m-0\">Teacher</p> : null}\r\n                                                            {(value.manager) ? <p className=\"m-0\">Manager</p> : null}\r\n                                                            {(value.student) ? <p className=\"m-0\">Student</p> : null}\r\n                                                        </td>\r\n                                                        <td className=\"btnTD text-center\">\r\n                                                            <button className=\"btn Btn32 btn-warning mx-1\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent(value)}><i class=\"fas fa-pencil-alt\"></i></button>\r\n                                                            {\r\n                                                                this.state.delete ? <button className=\"btn Btn32 btn-danger\" onClick={() => this.delete(value.id)}><i class=\"fas fa-trash\"></i></button> : ''\r\n                                                            }\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }) :\r\n                                                <tr>\r\n                                                    <td colSpan=\"12\" className=\"text-center\">\r\n                                                        Empty\r\n                                                        </td>\r\n                                                </tr>\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.modal\r\n                }\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}