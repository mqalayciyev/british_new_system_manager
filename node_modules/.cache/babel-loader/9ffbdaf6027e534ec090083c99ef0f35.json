{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Messages\\\\Messages.js\";\nimport React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport img from '../../img/profile.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      this.setState({\n        myid: userInfo.user.user_info.id\n      });\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`http://127.0.0.1:8000/api/managers/messages`);\n      console.log(response.data);\n\n      if (response.data.status === 'success') {\n        this.setState({\n          messages: response.data.messages\n        });\n      }\n    };\n\n    this.message = messages => {\n      if (messages.sender !== this.state.myid) {\n        let status = messages.status ? 1 : 0;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: status ? '' : 'bg-warning',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"rounded-circle h-100 w-100\",\n              style: {\n                maxWidth: '60px',\n                maxHeight: '60px'\n              },\n              src: messages.user1_image ? messages.user1_image : img,\n              alt: \"account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), messages.image]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `/Messages/Chat/${messages.sender}`,\n                  state: messages.sender\n                },\n                state: {\n                  id: messages.sender\n                },\n                children: messages.user_1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"btnTD text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/Messages/Chat/${messages.sender}`\n              },\n              state: {\n                id: messages.sender\n              },\n              className: \"btn Btn32 btn-success\",\n              ref: ref => this.fooRef = ref,\n              \"data-tip\": \"Write a message...\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this);\n      } else if (messages.receiving !== this.state.myid) {\n        let status = messages.status ? 1 : 0;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: status ? '' : 'bg-warning',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"rounded-circle h-100 w-100\",\n              style: {\n                maxWidth: '60px',\n                maxHeight: '60px'\n              },\n              src: messages.user2_image ? messages.user2_image : img,\n              alt: \"account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), messages.image]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/Messages/Chat/${messages.receiving}`,\n                state: {\n                  id: messages.sender\n                },\n                children: messages.user_2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"btnTD text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/Messages/Chat/${messages.receiving}`,\n              state: {\n                id: messages.sender\n              },\n              className: \"btn Btn32 btn-success\",\n              ref: ref => this.fooRef = ref,\n              \"data-tip\": \"Write a message...\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.dateReplace = time => {\n      let date = new Date(time);\n      date = date.toString();\n      date = date.split('GMT')[0];\n      return date;\n    };\n\n    this.state = {\n      messages: null,\n      myid: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive bg-white m-0 p-3 rounded shadow\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered m-0\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.state.messages ? this.message(this.state.messages) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"12\",\n                      className: \"text-center\",\n                      children: \"Empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 107\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 103\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Messages/Messages.js"],"names":["React","Component","ReactTooltip","Link","axios","img","Messages","constructor","props","componentDidMount","load","name","userInfo","JSON","parse","localStorage","getItem","setState","myid","user","user_info","id","interceptors","request","use","config","headers","authorization","token","error","Promise","reject","response","get","console","log","data","status","messages","message","sender","state","maxWidth","maxHeight","user1_image","image","pathname","user_1","ref","fooRef","receiving","user2_image","user_2","dateReplace","time","date","Date","toString","split","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport img from '../../img/profile.jpg';\r\n\r\nexport default class Messages extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { messages: null, myid: 0 };\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        this.setState({ myid: userInfo.user.user_info.id })\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`http://127.0.0.1:8000/api/managers/messages`)\r\n        console.log(response.data)\r\n        if (response.data.status === 'success') {\r\n            this.setState({\r\n                messages: response.data.messages\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n    message = (messages) => {\r\n        if (messages.sender !== this.state.myid) {\r\n            let status = messages.status ? 1 : 0;\r\n            return (\r\n                <tr className={status ? '' : 'bg-warning'}>\r\n                    <td>\r\n                        <img className=\"rounded-circle h-100 w-100\" style={{ maxWidth: '60px', maxHeight: '60px' }} src={messages.user1_image ? messages.user1_image : img} alt='account' />\r\n                        {messages.image}\r\n                    </td>\r\n                    <td>\r\n                        <b><Link to={{  pathname: `/Messages/Chat/${messages.sender}`, state: messages.sender }} state={{ id: messages.sender }}>{messages.user_1}</Link></b>\r\n                    </td>\r\n                    <td className=\"btnTD text-center\">\r\n                        <Link to={{  pathname: `/Messages/Chat/${messages.sender}` }} state={{ id: messages.sender }} className=\"btn Btn32 btn-success\" ref={ref => this.fooRef = ref} data-tip='Write a message...'>\r\n                            <i className=\"fa fa-comment\"></i>\r\n                        </Link>\r\n                        <ReactTooltip />\r\n\r\n                        {/* <button className=\"btn Btn32 btn-danger\" data-id={messages.id} data-link=\"lesson\" onClick={this.delete}><i className=\"fas fa-trash\"></i></button> */}\r\n\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        else if (messages.receiving !== this.state.myid) {\r\n            let status = messages.status ? 1 : 0;\r\n            return (\r\n                <tr className={status ? '' : 'bg-warning'}>\r\n                    <td>\r\n                        <img className=\"rounded-circle h-100 w-100\" style={{ maxWidth: '60px', maxHeight: '60px' }} src={messages.user2_image ? messages.user2_image : img} alt='account' />\r\n                        {messages.image}\r\n                    </td>\r\n                    <td>\r\n                        <b><Link to={`/Messages/Chat/${messages.receiving}`} state={{ id: messages.sender }}>{messages.user_2}</Link></b>\r\n                    </td>\r\n                    <td className=\"btnTD text-center\">\r\n                        <Link to={`/Messages/Chat/${messages.receiving}`} state={{ id: messages.sender }} className=\"btn Btn32 btn-success\" ref={ref => this.fooRef = ref} data-tip='Write a message...'>\r\n                            <i className=\"fa fa-comment\"></i>\r\n                        </Link>\r\n                        <ReactTooltip />\r\n\r\n                        {/* <button className=\"btn Btn32 btn-danger\" data-id={messages.id} data-link=\"lesson\" onClick={this.delete}><i className=\"fas fa-trash\"></i></button> */}\r\n\r\n                    </td>\r\n                </tr>\r\n            )\r\n\r\n        }\r\n    }\r\n    dateReplace = (time) => {\r\n        let date = new Date(time)\r\n        date = date.toString()\r\n        date = date.split('GMT')[0]\r\n        return date\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>Messages</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"table-responsive bg-white m-0 p-3 rounded shadow\">\r\n                                <table className=\"table table-bordered m-0\">\r\n                                    <tbody>\r\n                                        {\r\n                                            this.state.messages ? this.message(this.state.messages) : <tr><td colSpan=\"12\" className=\"text-center\">Empty</td></tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}