{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\MyTasks\\\\Completed.js\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Datatables from '../Datatables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Completed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/tasks/completed`); // console.log(response.data)\n\n      if (response.data.status === 'success') {\n        this.setState({\n          tasks: response.data.tasks,\n          display: false\n        });\n      }\n    };\n\n    this.delete = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.delete(`${process.env.REACT_APP_API_URL}/students/tasks/${id}`);\n\n      if (response.data.status === 'success') {\n        NotificationManager.warning(response.data.message, 'Warning', 5000);\n        this.load();\n      }\n    };\n\n    this.buttons = row => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: '250px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-danger\",\n          onClick: () => this.delete(row.value),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 97\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.date = value => {\n      console.log(value);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Start:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: [value.start_date, \", \", value.start_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), \"End:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [value.end_date, \", \", value.end_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      tasks: [],\n      display: true\n    };\n  }\n\n  render() {\n    const columns = [{\n      name: 'Execution date',\n      selector: row => this.date(row)\n    }, {\n      name: 'Description',\n      selector: row => row.note\n    }, {\n      name: 'Client',\n      sortable: true,\n      selector: row => row.client\n    }, {\n      name: 'Mobile',\n      selector: row => row.mobile\n    }, {\n      name: 'Email',\n      sortable: true,\n      selector: row => row.email\n    }, {\n      name: 'Purpose',\n      sortable: true,\n      selector: row => row.purpose\n    }, {\n      name: 'Priority',\n      sortable: true,\n      selector: row => row.priority\n    }, {\n      name: 'Created at',\n      sortable: true,\n      selector: row => row.created_at\n    }, {\n      name: '',\n      selector: row => this.buttons(row)\n    }];\n    const data = [];\n    const priority = ['Low', 'Middle', 'High'];\n\n    if (this.state.tasks.length > 0) {\n      this.state.tasks.map((value, index) => {\n        data.push({\n          id: value.id,\n          value: value,\n          note: value.note,\n          start_date: value.start_date,\n          start_time: value.start_time,\n          end_date: value.end_date,\n          end_time: value.start_time,\n          client: value.client,\n          mobile: value.mobile,\n          email: value.email,\n          purpose: value.purpose,\n          priority: priority[value.priority],\n          created_at: value.created_at\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"My Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/TasksActual\",\n                className: \"btn btn-info\",\n                children: \"Actual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/TasksCompleted\",\n                className: \"btn btn-info ml-2\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                style: {\n                  display: this.state.display ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \" bg-white m-0 p-3 rounded shadow\",\n                children: /*#__PURE__*/_jsxDEV(Datatables, {\n                  columns: columns,\n                  data: data,\n                  pending: this.state.display,\n                  filter: `note`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Completed;","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/MyTasks/Completed.js"],"names":["React","NavLink","axios","NotificationContainer","NotificationManager","Datatables","Completed","Component","constructor","props","componentDidMount","load","name","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","post","process","env","REACT_APP_API_URL","data","status","setState","tasks","display","delete","id","warning","message","buttons","row","minWidth","value","date","console","log","start_date","start_time","end_date","end_time","state","render","columns","selector","note","sortable","client","mobile","email","purpose","priority","created_at","length","map","index","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink  } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Datatables from '../Datatables';\r\n\r\n\r\nclass Completed extends React.Component {\r\n\tconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tasks: [],\r\n            display: true\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/tasks/completed`)\r\n        // console.log(response.data)\r\n        if (response.data.status === 'success') {\r\n            this.setState({\r\n                tasks: response.data.tasks,\r\n                display: false\r\n            })\r\n        }\r\n    }\r\n    delete = async id => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.delete(`${process.env.REACT_APP_API_URL}/students/tasks/${id}`)\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.warning(response.data.message, 'Warning', 5000);\r\n            this.load()\r\n        }\r\n    }\r\n    buttons = (row) => {\r\n        return (\r\n            <div style={{ minWidth: '250px' }}>\r\n                <button className=\"btn Btn32 btn-danger\" onClick={() => this.delete(row.value)}><i className=\"fas fa-trash\"></i></button>\r\n            </div>\r\n        )\r\n    }\r\n    date = (value) => {\r\n        console.log(value)\r\n        return(\r\n            <>\r\n                Start: \r\n                <p className=\"text-success\">{value.start_date}, {value.start_time}</p>\r\n                End: \r\n                <p className=\"text-danger\">{value.end_date}, {value.end_time}</p>\r\n            </>\r\n        )\r\n    }\r\n\trender() {\r\n\t\tconst columns = [\r\n            {\r\n                name: 'Execution date',\r\n                selector: row => this.date(row),\r\n            },\r\n            {\r\n                name: 'Description',\r\n                selector: row => row.note,\r\n            },\r\n            {\r\n                name: 'Client',\r\n                sortable: true,\r\n                selector: row => row.client,\r\n            },\r\n            {\r\n                name: 'Mobile',\r\n                selector: row => row.mobile,\r\n            },\r\n            {\r\n                name: 'Email',\r\n                sortable: true,\r\n                selector: row => row.email,\r\n            },\r\n            {\r\n                name: 'Purpose',\r\n                sortable: true,\r\n                selector: row => row.purpose,\r\n            },\r\n            {\r\n                name: 'Priority',\r\n                sortable: true,\r\n                selector: row => row.priority,\r\n            },\r\n            {\r\n                name: 'Created at',\r\n                sortable: true,\r\n                selector: row => row.created_at,\r\n            },\r\n            {\r\n                name: '',\r\n                selector: row => this.buttons(row),\r\n            },\r\n        ];\r\n        const data = []\r\n        const priority = ['Low', 'Middle', 'High'];\r\n        if(this.state.tasks.length > 0)\r\n        {\r\n            this.state.tasks.map((value, index) => {\r\n                data.push({ \r\n                    id: value.id, \r\n                    value: value, \r\n                    note: value.note, \r\n                    start_date: value.start_date, \r\n                    start_time: value.start_time, \r\n                    end_date: value.end_date, \r\n                    end_time: value.start_time, \r\n                    client: value.client, \r\n                    mobile:  value.mobile,\r\n                    email:  value.email,\r\n                    purpose: value.purpose, \r\n                    priority: priority[value.priority], \r\n                    created_at: value.created_at,\r\n                })\r\n            })\r\n        }\r\n\t\treturn (\r\n\t\t\t<>\r\n            <NotificationContainer />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<h4>My Tasks</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t<NavLink to=\"/TasksActual\" className=\"btn btn-info\">Actual</NavLink>\r\n\t\t\t\t\t\t\t<NavLink to=\"/TasksCompleted\" className=\"btn btn-info ml-2\">Completed</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6\" align='right'>\r\n\t\t\t\t\t\t\t{/* <NavLink to=\"/SchedulingCalendar\" className=\"btn btn-info mx-2\">Calendar</NavLink> */}\r\n\t\t\t\t\t\t\t{/* <button type=\"button\" className=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent()}>Add task</button> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n                        <div className=\"loading\" style={{ display: this.state.display ? 'block' : 'none' }}>\r\n                            <div className=\"text-center\">\r\n                                <span>\r\n                                    Loading...\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\t\t\t\t\t\t\t<div className=\" bg-white m-0 p-3 rounded shadow\">\r\n                                <Datatables columns={columns} data={data} pending={this.state.display} filter={`note`}/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default Completed;"]},"metadata":{},"sourceType":"module"}