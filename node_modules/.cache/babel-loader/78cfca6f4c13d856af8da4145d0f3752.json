{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Header.js\";\nimport React, { Component } from 'react'; // import user1 from 'admin-lte/dist/img/user1-128x128.jpg'\n// import user8 from 'admin-lte/dist/img/user8-128x128.jpg'\n// import user3 from 'admin-lte/dist/img/user3-128x128.jpg'\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { SessionContext } from \"../Context/Session\";\nimport ControlSidebar from './ControlSidebar';\nimport createHistory from 'history/createBrowserHistory'; // import user2 from 'admin-lte/dist/img/user2-160x160.jpg'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {// setInterval(async () => {\n      //     let userInfo = JSON.parse(localStorage.getItem('user-info'))\n      //     axios.interceptors.request.use(\n      //         config => {\n      //             config.headers.authorization = `Bearer ${userInfo.user.token}`;\n      //             return config;\n      //         },\n      //         error => {\n      //             return Promise.reject(error)\n      //         }\n      //     )\n      //     let messages = await axios.get(`${process.env.REACT_APP_API_URL}/managers/count-messages`)\n      //     let notifications = await axios.get(`${process.env.REACT_APP_API_URL}/notifications`)\n      //     if (messages.data.status === 'success') {\n      //         this.setState({ messages: messages.data.count })\n      //     }\n      //     if (notifications.data.status === 'success') {\n      //         this.setState({ notifications: notifications.data.count })\n      //     }\n      // }, 120000);\n    };\n\n    this.componentDidUpdate = () => {};\n\n    this.get_counts = async () => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let messages = await axios.get(`${process.env.REACT_APP_API_URL}/managers/messages`);\n\n      if (messages.data.status === 'success') {// this.setState({ messages: messages.data.count })\n      }\n    };\n\n    this.logout = async e => {\n      e.preventDefault();\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      console.log(userInfo.user);\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.post(`${process.env.REACT_APP_API_URL}/logout`);\n\n      if (response.data.status === 'sign_out') {\n        localStorage.removeItem('user-info');\n        this.context.setSession(response.status, '');\n        window.location.href = '/';\n      } else {\n        NotificationManager.error('The operation failed.', 'Error', 5000);\n      }\n    };\n\n    this.history = createHistory();\n    this.state = {\n      notifications: 0,\n      messages: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"main-header navbar navbar-expand navbar-white navbar-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              \"data-widget\": \"pushmenu\",\n              href: 'void(0)',\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-bars\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 93\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav ml-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item dropdown\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"Messages\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-danger navbar-badge\",\n                children: this.state.messages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item dropdown\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"Notifications\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-bell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-warning navbar-badge\",\n                children: this.state.notifications\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              onClick: e => this.logout(e),\n              href: 'void(0)',\n              children: \"Sign out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nHeader.contextType = SessionContext;","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Header.js"],"names":["React","Component","axios","Link","NotificationContainer","NotificationManager","SessionContext","ControlSidebar","createHistory","Header","constructor","props","componentDidMount","componentDidUpdate","get_counts","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","messages","get","process","env","REACT_APP_API_URL","data","status","logout","e","preventDefault","console","log","response","post","removeItem","context","setSession","window","location","href","history","state","notifications","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import user1 from 'admin-lte/dist/img/user1-128x128.jpg'\r\n// import user8 from 'admin-lte/dist/img/user8-128x128.jpg'\r\n// import user3 from 'admin-lte/dist/img/user3-128x128.jpg'\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { SessionContext } from \"../Context/Session\";\r\nimport ControlSidebar from './ControlSidebar';\r\nimport createHistory from 'history/createBrowserHistory'\r\n// import user2 from 'admin-lte/dist/img/user2-160x160.jpg'\r\n\r\n\r\nexport default class Header extends Component {\r\n    static contextType = SessionContext;\r\n    constructor(props) {\r\n        super(props)\r\n        this.history = createHistory()\r\n        this.state = { notifications: 0, messages: 0 };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // setInterval(async () => {\r\n\r\n        //     let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        //     axios.interceptors.request.use(\r\n        //         config => {\r\n        //             config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n        //             return config;\r\n        //         },\r\n        //         error => {\r\n        //             return Promise.reject(error)\r\n        //         }\r\n        //     )\r\n        //     let messages = await axios.get(`${process.env.REACT_APP_API_URL}/managers/count-messages`)\r\n        //     let notifications = await axios.get(`${process.env.REACT_APP_API_URL}/notifications`)\r\n\r\n        //     if (messages.data.status === 'success') {\r\n        //         this.setState({ messages: messages.data.count })\r\n        //     }\r\n        //     if (notifications.data.status === 'success') {\r\n        //         this.setState({ notifications: notifications.data.count })\r\n        //     }\r\n        // }, 120000);\r\n    }\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n\r\n    get_counts = async () => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n\r\n        let messages = await axios.get(`${process.env.REACT_APP_API_URL}/managers/messages`)\r\n            if (messages.data.status === 'success') {\r\n                // this.setState({ messages: messages.data.count })\r\n            }\r\n    }\r\n\r\n    logout = async (e) => {\r\n        e.preventDefault()\r\n\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        console.log(userInfo.user)\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n\r\n        let response = await axios.post(`${process.env.REACT_APP_API_URL}/logout`)\r\n        if (response.data.status === 'sign_out') {\r\n            localStorage.removeItem('user-info')\r\n            this.context.setSession(response.status, '')\r\n            window.location.href = '/'\r\n        }\r\n        else {\r\n            NotificationManager.error('The operation failed.', 'Error', 5000);\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-widget=\"pushmenu\" href={'void(0)'}><i className=\"fas fa-bars\"></i></a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link\" to=\"Messages\">\r\n                                <i className=\"far fa-comments\"></i>\r\n                                <span className=\"badge badge-danger navbar-badge\">{this.state.messages}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link\" to=\"Notifications\">\r\n                                <i className=\"far fa-bell\"></i>\r\n                                <span className=\"badge badge-warning navbar-badge\">{this.state.notifications}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" onClick={(e) => this.logout(e)} href={'void(0)'}>\r\n                                Sign out\r\n                            </a>\r\n                        </li>\r\n                        {/* <li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" data-widget=\"control-sidebar\" data-slide=\"true\" href=\"#\" role=\"button\"><i\r\n                                    class=\"fas fa-th-large\"></i></a>\r\n                            </li>\r\n                        </li> */}\r\n                    </ul>\r\n\r\n                </nav>\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}