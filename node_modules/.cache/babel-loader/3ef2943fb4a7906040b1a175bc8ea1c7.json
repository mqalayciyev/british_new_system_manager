{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Profile\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { SessionContext } from \"../../Context/Session\";\nimport \"croppie/croppie.css\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport Croppie from \"croppie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ImageUpload() {\n  _s();\n\n  const [image, setImage] = React.useState(\"\");\n  const [croppie, setCroppie] = React.useState(null);\n\n  function handleImage(image) {\n    // setImage(image)\n    const el = document.getElementById(\"image-helper\");\n\n    if (el) {\n      const croppieInstance = new Croppie(el, {\n        enableExif: true,\n        viewport: {\n          height: 250,\n          width: 250\n        },\n        boundary: {\n          height: 280,\n          width: 400\n        }\n      });\n      croppieInstance.bind({\n        url: image\n      }); // setCroppie(croppieInstance)\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (croppie !== null) {\n      croppie.result({\n        type: 'base64',\n        size: {\n          width: 480,\n          height: 480\n        }\n      }).then(blob => {\n        console.log(blob);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal fade bd-example-modal-lg\",\n      id: \"imageUpload\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"imageUploadLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-dialog modal-lg\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [image === \"\" && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n                image: image,\n                setImage: handleImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), image !== \"\" && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justify: \"center\",\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"image-helper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              justify: \"flex-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(ImageUpload, \"maTr/PIGo4mKf5zwFo/ahBrxTpU=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Profile/ImageUpload.js"],"names":["React","useState","axios","NotificationContainer","NotificationManager","SessionContext","Button","Grid","Croppie","ImageUpload","image","setImage","croppie","setCroppie","handleImage","el","document","getElementById","croppieInstance","enableExif","viewport","height","width","boundary","bind","url","handleSubmit","event","preventDefault","result","type","size","then","blob","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { SessionContext } from \"../../Context/Session\";\r\n\r\nimport \"croppie/croppie.css\";\r\nimport { Button, Grid } from \"@material-ui/core\"\r\nimport Croppie from \"croppie\";\r\n\r\n\r\n\r\nexport default function ImageUpload() {\r\n\r\n    const [image, setImage] = React.useState(\"\")\r\n    const [croppie, setCroppie] = React.useState (null)\r\n\r\n    function handleImage(image) {\r\n        // setImage(image)\r\n        const el = document.getElementById(\"image-helper\")\r\n        if (el) {\r\n            const croppieInstance = new Croppie(el, {\r\n                enableExif: true,\r\n                viewport: {\r\n                    height: 250,\r\n                    width: 250,\r\n                },\r\n                boundary: {\r\n                    height: 280,\r\n                    width: 400,\r\n                }\r\n            });\r\n            croppieInstance.bind({\r\n              url: image,\r\n            });\r\n            // setCroppie(croppieInstance)\r\n            }\r\n        }\r\n\r\n        function handleSubmit(event) {\r\n            event.preventDefault()\r\n            if (croppie !== null) {\r\n              croppie.result({type: 'base64',\r\n              size: {\r\n                  width: 480,\r\n                  height: 480\r\n              }}).then((blob) => {\r\n                console.log(blob)\r\n              }\r\n              )\r\n            }\r\n          }\r\n\r\n        return (\r\n            <>\r\n                <div class=\"modal fade bd-example-modal-lg\" id=\"imageUpload\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"imageUploadLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={2}>\r\n        {image === \"\" && (\r\n            <Grid item xs={12}>\r\n                {/* Your image upload functionality here */}\r\n                <ImageUpload image={image} setImage={handleImage} />\r\n            </Grid>\r\n            )}\r\n        {image !== \"\" && (\r\n            <Grid item container justify=\"center\" xs={12}>\r\n              <div id=\"image-helper\"></div>\r\n            </Grid>\r\n            )}\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}