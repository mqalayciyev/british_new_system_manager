{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Profile\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { SessionContext } from \"../../Context/Session\";\nimport \"croppie/croppie.css\";\nimport Croppie from \"croppie\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ImageUpload() {\n  _s();\n\n  const [image, setImage] = React.useState(\"\");\n  const [croppie, setCroppie] = React.useState < Croppie | null > null;\n\n  function handleImage(image) {\n    setImage(image);\n    const el = document.getElementById(\"image-helper\");\n\n    if (el) {\n      const croppieInstance = new Croppie(el, {\n        enableExif: true,\n        viewport: {\n          height: 250,\n          width: 250\n        },\n        boundary: {\n          height: 280,\n          width: 400\n        }\n      });\n      croppieInstance.bind({\n        url: image\n      });\n      setCroppie(croppieInstance);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (croppie !== null) {\n      croppie.result({\n        type: 'base64',\n        size: {\n          width: 480,\n          height: 480\n        }\n      }).then(blob => {\n        console.log(blob);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal fade bd-example-modal-lg\",\n      id: \"exampleModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"modal-dialog modal-lg\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"modal-title\",\n                id: \"exampleModalLabel\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"close\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [image === \"\" && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n                    image: image,\n                    setImage: handleImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 45\n                }, this), image !== \"\" && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  justify: \"center\",\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"image-helper\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  item: true,\n                  xs: 12,\n                  justify: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    variant: \"contained\",\n                    type: \"submit\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"reset\",\n                class: \"btn btn-secondary\",\n                \"data-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                class: \"btn btn-primary\",\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ImageUpload, \"kD9UrQSWR+ZcrmqWJjEkvApuaqw=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Profile/ImageUpload.js"],"names":["React","Component","axios","NotificationContainer","NotificationManager","SessionContext","Croppie","Button","Grid","ImageUpload","image","setImage","useState","croppie","setCroppie","handleImage","el","document","getElementById","croppieInstance","enableExif","viewport","height","width","boundary","bind","url","handleSubmit","event","preventDefault","result","type","size","then","blob","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { SessionContext } from \"../../Context/Session\";\r\n\r\nimport \"croppie/croppie.css\";\r\nimport Croppie from \"croppie\";\r\nimport { Button, Grid } from \"@material-ui/core\"\r\n\r\n\r\n\r\nexport function ImageUpload() {\r\n    const [image, setImage] = React.useState(\"\")\r\n    const [croppie, setCroppie] = React.useState < Croppie | null > (null)\r\n\r\n    function handleImage(image) {\r\n        setImage(image)\r\n        const el = document.getElementById(\"image-helper\")\r\n        if (el) {\r\n            const croppieInstance = new Croppie(el, {\r\n                enableExif: true,\r\n                viewport: {\r\n                    height: 250,\r\n                    width: 250,\r\n                },\r\n                boundary: {\r\n                    height: 280,\r\n                    width: 400,\r\n                }\r\n            });\r\n            croppieInstance.bind({\r\n                url: image,\r\n            });\r\n            setCroppie(croppieInstance)\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (croppie !== null) {\r\n            croppie.result({\r\n                type: 'base64',\r\n                size: {\r\n                    width: 480,\r\n                    height: 480\r\n                }\r\n            }).then((blob) => {\r\n                console.log(blob)\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"modal fade bd-example-modal-lg\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit</h5>\r\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                    <Grid container spacing={2}>\r\n                                        {image === \"\" && (\r\n                                            <Grid item xs={12}>\r\n                                                {/* Your image upload functionality here */}\r\n                                                <ImageUpload image={image} setImage={handleImage} />\r\n                                            </Grid>\r\n                                        )}\r\n                                        {image !== \"\" && (\r\n                                            <Grid item container justify=\"center\" xs={12}>\r\n                                                <div id=\"image-helper\"></div>\r\n                                            </Grid>\r\n                                        )}\r\n                                        <Grid container item xs={12} justify=\"flex-end\">\r\n                                            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"reset\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}