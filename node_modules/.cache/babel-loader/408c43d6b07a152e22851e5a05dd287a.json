{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Leads\\\\Leads.js\";\nimport React, { Component } from 'react';\nimport Add from './Add';\nimport Notes from './Notes';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Datatables from '../Datatables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Leads extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.removeComponent = () => {\n      this.setState({\n        modal: []\n      });\n    };\n\n    this.Buttons = value => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-warning\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModal\",\n          onClick: () => this.addComponent(value),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pencil-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 148\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-info\",\n          onClick: () => this.addStudent(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 98\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-primary\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#notesModal\",\n          onClick: () => this.notes(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-clipboard-list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 142\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), this.state.delete ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-danger\",\n          onClick: () => this.delete(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 118\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 39\n        }, this) : '']\n      }, void 0, true);\n    };\n\n    this.addComponent = value => {\n      let edit = 0;\n      let data = {};\n\n      if (value) {\n        edit = value.id;\n        data = value;\n      }\n\n      let modal = /*#__PURE__*/_jsxDEV(Add, {\n        edit: edit,\n        data: data,\n        load: this.load,\n        removeComponent: this.removeComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.notes = id => {\n      let modal = /*#__PURE__*/_jsxDEV(Notes, {\n        leads: id,\n        removeComponent: this.removeComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.addStudent = async id => {\n      var password = prompt(\"Please set a password for select leads.\");\n\n      if (password != null) {\n        let userInfo = JSON.parse(localStorage.getItem('user-info'));\n        axios.interceptors.request.use(config => {\n          config.headers.authorization = `Bearer ${userInfo.user.token}`;\n          return config;\n        }, error => {\n          return Promise.reject(error);\n        });\n        let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/addStudent/${id}`, {\n          password: password\n        });\n        console.log(response.data);\n\n        if (response.data.status === 'success') {\n          NotificationManager.success('Leads telebeler siyahisina elave edildi', 'Success', 5000);\n        } else {\n          let message = response.data.message;\n\n          for (const [key, value] of Object.entries(message)) {\n            console.log(key);\n            NotificationManager.error(value, 'Error', 5000);\n          }\n        }\n      } else {\n        NotificationManager.warning('Sifre teyin edilmedi.', 'Warning', 5000);\n      }\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/leads`);\n\n      if (response.data.status === 'success') {\n        this.setState({\n          leads: response.data.leads,\n          delete: userInfo.user.user_info.type === 1 ? true : false,\n          display: false\n        });\n      }\n    };\n\n    this.delete = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/leads/${id}`);\n\n      if (response.data.status === 'success') {\n        NotificationManager.warning(response.data.message, 'Warning', 5000);\n        this.load();\n      }\n    };\n\n    this.state = {\n      leads: [],\n      display: true\n    };\n  }\n\n  render() {\n    const columns = [{\n      name: 'Lead Name',\n      sortable: true,\n      selector: row => row.title\n    }, {\n      name: 'Mobile',\n      selector: row => row.mobile\n    }, {\n      name: 'Address',\n      selector: row => row.address\n    }, {\n      name: 'Email',\n      selector: row => row.email\n    }, {\n      name: 'Leads purpose',\n      selector: row => row.purpose\n    }, {\n      name: 'Leads source',\n      selector: row => row.source\n    }, {\n      name: 'Created at',\n      sortable: true,\n      selector: row => row.created_at\n    }, {\n      name: '',\n      selector: row => this.Buttons(row)\n    }];\n    const data = [];\n\n    if (this.state.leads.length > 0) {\n      this.state.leads.map((value, index) => {\n        data.push({\n          id: value.id,\n          title: value.name,\n          mobile: value.mobile,\n          address: value.address,\n          email: value.email,\n          owner: value.owner,\n          purpose: value.purpose,\n          source: value.source,\n          created_at: value.created_at\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Leads\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6 clearfix\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-info  float-right\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#exampleModal\",\n                onClick: () => this.addComponent(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading\",\n                style: {\n                  display: this.state.display ? 'block' : 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white m-0 p-3 rounded shadow\",\n                children: /*#__PURE__*/_jsxDEV(Datatables, {\n                  columns: columns,\n                  data: data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), this.state.modal]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Leads/Leads.js"],"names":["React","Component","Add","Notes","axios","NotificationContainer","NotificationManager","Datatables","Leads","constructor","props","componentDidMount","load","removeComponent","setState","modal","Buttons","value","addComponent","addStudent","id","notes","state","delete","edit","data","password","prompt","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","post","process","env","REACT_APP_API_URL","console","log","status","success","message","key","Object","entries","warning","name","get","leads","user_info","type","display","render","columns","sortable","selector","row","title","mobile","address","email","purpose","source","created_at","length","map","index","push","owner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Add from './Add';\r\nimport Notes from './Notes';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Datatables from '../Datatables';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Leads extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            leads: [],\r\n            display: true\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    removeComponent = () => {\r\n        this.setState({\r\n            modal: []\r\n        })\r\n    }\r\n    Buttons = (value) => {\r\n        return (\r\n            <>\r\n                <button className=\"btn Btn32 btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent(value)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n                <button className=\"btn Btn32 btn-info\" onClick={() => this.addStudent(value.id)}><i className=\"fas fa-user-plus\"></i></button>\r\n                <button className=\"btn Btn32 btn-primary\" data-toggle=\"modal\" data-target=\"#notesModal\" onClick={() => this.notes(value.id)}><i className=\"fas fa-clipboard-list\"></i></button>\r\n                { this.state.delete ? <button className=\"btn Btn32 btn-danger\" onClick={() => this.delete(value.id)}><i className=\"fas fa-trash\"></i></button> : '' }\r\n            </>\r\n        )\r\n    }\r\n    addComponent = (value) => {\r\n        let edit = 0\r\n        let data = {}\r\n        if (value) {\r\n            edit = value.id\r\n            data = value\r\n        }\r\n\r\n        let modal = <Add edit={edit} data={data} load={this.load} removeComponent={this.removeComponent} />\r\n\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    notes = (id) => {\r\n\r\n        let modal = <Notes leads={id} removeComponent={this.removeComponent} />\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    addStudent = async id => {\r\n        var password = prompt(\"Please set a password for select leads.\");\r\n        if(password != null){\r\n            let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n            axios.interceptors.request.use(\r\n                config => {\r\n                    config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                    return config;\r\n                },\r\n                error => {\r\n                    return Promise.reject(error)\r\n                }\r\n            )\r\n            let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/addStudent/${id}`, {password: password})\r\n            console.log(response.data)\r\n            if(response.data.status === 'success'){\r\n                NotificationManager.success('Leads telebeler siyahisina elave edildi', 'Success', 5000);\r\n            }\r\n            else{\r\n                let message = response.data.message;\r\n                for (const [key, value] of Object.entries(message)) {\r\n                    console.log(key)\r\n                    NotificationManager.error(value, 'Error', 5000);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            NotificationManager.warning('Sifre teyin edilmedi.', 'Warning', 5000);\r\n        }\r\n        \r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/leads`)\r\n        if(response.data.status === 'success'){\r\n            this.setState({\r\n                leads: response.data.leads,\r\n                delete: userInfo.user.user_info.type === 1 ? true : false,\r\n                display: false\r\n            })\r\n        }\r\n        \r\n    }\r\n    delete = async id => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/leads/${id}`)\r\n\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.warning(response.data.message, 'Warning', 5000);\r\n            this.load()\r\n        }\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                name: 'Lead Name',\r\n                sortable: true,\r\n                selector: row => row.title,\r\n            },\r\n            {\r\n                name: 'Mobile',\r\n                selector: row => row.mobile,\r\n            },\r\n            {\r\n                name: 'Address',\r\n                selector: row => row.address,\r\n            },\r\n            {\r\n                name: 'Email',\r\n                selector: row => row.email,\r\n            },\r\n            {\r\n                name: 'Leads purpose',\r\n                selector: row => row.purpose,\r\n            },\r\n            {\r\n                name: 'Leads source',\r\n                selector: row => row.source,\r\n            },\r\n            {\r\n                name: 'Created at',\r\n                sortable: true,\r\n                selector: row => row.created_at,\r\n            },\r\n            {\r\n                name: '',\r\n                selector: row => this.Buttons(row),\r\n            },\r\n        ];\r\n        const data = []\r\n        if(this.state.leads.length > 0)\r\n        {\r\n            this.state.leads.map((value, index) => {\r\n                data.push({ \r\n                    id: value.id, \r\n                    title: value.name, \r\n                    mobile: value.mobile, \r\n                    address:  value.address,  \r\n                    email: value.email, \r\n                    owner: value.owner, \r\n                    purpose: value.purpose, \r\n                    source: value.source, \r\n                    created_at: value.created_at,\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            <>\r\n                <NotificationContainer />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h4>Leads</h4>\r\n                            </div>\r\n                            <div className=\"col-12 col-sm-6 clearfix\">\r\n                            <button type=\"button\" className=\"btn btn-info  float-right\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent()}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                            \r\n                            \r\n                            <div className=\"loading\" style={{ display: this.state.display ? 'block' : 'none' }}>\r\n                                <div className=\"text-center\">\r\n                                    <span>\r\n                                        Loading...\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                                <div className=\"bg-white m-0 p-3 rounded shadow\">\r\n                                <Datatables columns={columns} data={data} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.modal\r\n                }\r\n                {/* { <Add edit={this.state.edit} data={this.state.data} load={this.load} setData={this.setData} />} */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}