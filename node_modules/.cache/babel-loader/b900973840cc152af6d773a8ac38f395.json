{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\OnlineTutoring\\\\Tests.js\";\nimport React, { Component } from 'react';\nimport UploadTest from './Modals/UploadTest';\nimport Questions from './Modals/Questions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class GroupLessons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`http://127.0.0.1:8000/api/managers/tests`);\n\n      if (response.data.status === 'success') {\n        // console.log(response.data)\n        this.setState({\n          tests: response.data.tests,\n          delete: userInfo.user.user_info.type === 1 ? true : false\n        });\n      }\n    };\n\n    this.removeComponent = () => {\n      this.setState({\n        modal: []\n      });\n    };\n\n    this.addComponent = value => {\n      let edit = 0;\n      let data = {};\n\n      if (value) {\n        edit = value.id;\n        data = value;\n      }\n\n      let modal = /*#__PURE__*/_jsxDEV(UploadTest, {\n        edit: edit,\n        data: data,\n        removeComponent: this.removeComponent,\n        load: this.load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.questionsComponent = value => {\n      let modal = /*#__PURE__*/_jsxDEV(Questions, {\n        id: value,\n        removeComponent: this.removeComponent,\n        load: this.load\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.capitalize = s => {\n      if (typeof s !== 'string') return '';\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n\n    this.state = {\n      tests: [],\n      data: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Tests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6 clearfix\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn btn-info  float-right\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#uploadTestModal\",\n                onClick: () => this.addComponent(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive bg-white m-0 p-3 rounded shadow\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  class: \"table table-bordered m-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Lesson\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Level\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"For Exam\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Added by\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Questions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: this.state.tests.length > 0 ? this.state.tests.map((value, index) => {\n                      const questions_count = JSON.parse(value.questions_count);\n                      const count = questions_count.filter(questions => questions.id !== null).length;\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.lesson_title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.level_title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.for_exam ? 'Yes' : 'No'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.user_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 121,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.note\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: count\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 127,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: value.status\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 130,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"btnTD text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn Btn32 btn-warning mx-1\",\n                            \"data-toggle\": \"modal\",\n                            \"data-target\": \"#uploadTestModal\",\n                            onClick: () => this.addComponent(value),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-pencil-alt\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 134,\n                              columnNumber: 200\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 134,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn Btn32 btn-success\",\n                            \"data-toggle\": \"modal\",\n                            \"data-target\": \"#questionsModal\",\n                            onClick: () => this.questionsComponent(value.id),\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              class: \"fas fa-clipboard\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 136,\n                              columnNumber: 203\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 136,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 133,\n                          columnNumber: 57\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 53\n                      }, this);\n                    }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: \"12\",\n                        className: \"text-center\",\n                        children: \"Empty\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), this.state.modal]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/OnlineTutoring/Tests.js"],"names":["React","Component","UploadTest","Questions","axios","GroupLessons","constructor","props","componentDidMount","load","name","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","get","data","status","setState","tests","delete","user_info","type","removeComponent","modal","addComponent","value","edit","id","questionsComponent","capitalize","s","charAt","toUpperCase","slice","state","render","length","map","index","questions_count","count","filter","questions","lesson_title","level_title","for_exam","user_name","note"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport UploadTest from './Modals/UploadTest'\r\nimport Questions from './Modals/Questions';\r\nimport axios from 'axios';\r\n\r\nexport default class GroupLessons extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tests: [],\r\n            data: {}\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`http://127.0.0.1:8000/api/managers/tests`)\r\n        if (response.data.status === 'success') {\r\n            // console.log(response.data)\r\n            this.setState({\r\n                tests: response.data.tests,\r\n                delete: userInfo.user.user_info.type === 1 ? true : false\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    removeComponent = () => {\r\n        this.setState({\r\n            modal: []\r\n        })\r\n    }\r\n    addComponent = (value) => {\r\n        let edit = 0\r\n        let data = {}\r\n        if (value) {\r\n            edit = value.id\r\n            data = value\r\n        }\r\n\r\n        let modal = <UploadTest edit={edit} data={data} removeComponent={this.removeComponent} load={this.load} />\r\n\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    questionsComponent = (value) => {\r\n\r\n        let modal = <Questions id={value} removeComponent={this.removeComponent} load={this.load} />\r\n\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h4>Tests</h4>\r\n                            </div>\r\n                            <div className=\"col-12 col-sm-6 clearfix\">\r\n                                <button type=\"button\" class=\"btn btn-info  float-right\" data-toggle=\"modal\" data-target=\"#uploadTestModal\" onClick={() => this.addComponent()} >Add</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"table-responsive bg-white m-0 p-3 rounded shadow\">\r\n                                    <table class=\"table table-bordered m-0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Lesson</th>\r\n                                                <th scope=\"col\">Level</th>\r\n                                                <th scope=\"col\">For Exam</th>\r\n                                                <th scope=\"col\">Added by</th>\r\n                                                <th scope=\"col\">Description</th>\r\n                                                <th scope=\"col\">Questions</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\"></th>\r\n                                                {/* <th scope=\"col\"><button className=\"btn Btn32 text-danger\"><i class=\"fas fa-trash\"></i></button></th> */}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {this.state.tests.length > 0 ? this.state.tests.map((value, index) => {\r\n                                            const questions_count = JSON.parse(value.questions_count)\r\n                                            const count = questions_count.filter(questions => questions.id !== null).length\r\n                                                return (\r\n                                                    <tr key={index}>\r\n\r\n                                                        <td>\r\n                                                            {value.name}\r\n                                                        </td>\r\n\r\n                                                        <td>\r\n                                                            {value.lesson_title}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.level_title}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.for_exam ? 'Yes' : 'No'}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.user_name}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.note}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {count}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {value.status}\r\n                                                        </td>\r\n                                                        <td className=\"btnTD text-center\">\r\n                                                            <button className=\"btn Btn32 btn-warning mx-1\" data-toggle=\"modal\" data-target=\"#uploadTestModal\" onClick={() => this.addComponent(value)}><i class=\"fas fa-pencil-alt\"></i></button>\r\n                                                            {/* <button className=\"btn Btn32 btn-info\"><i class=\"far fa-eye\"></i></button> */}\r\n                                                            <button className=\"btn Btn32 btn-success\" data-toggle=\"modal\" data-target=\"#questionsModal\" onClick={() => this.questionsComponent(value.id)}><i class=\"fas fa-clipboard\"></i></button>\r\n                                                            {/* <button className=\"btn Btn32 btn-danger\" data-id={value.id} data-link=\"lesson\" onClick={this.delete}><i class=\"fas fa-trash\"></i></button> */}\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }) :\r\n                                                <tr>\r\n                                                    <td colSpan=\"12\" className=\"text-center\">\r\n                                                        Empty\r\n                                                        </td>\r\n                                                </tr>\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.modal\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}