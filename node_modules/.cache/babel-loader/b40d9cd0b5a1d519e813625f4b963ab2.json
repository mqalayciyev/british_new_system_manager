{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\MyTasks\\\\MyTasks.js\";\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport Add from './Add';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport Datatables from '../Datatables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MyTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.load();\n    };\n\n    this.removeComponent = () => {\n      this.setState({\n        modal: []\n      });\n    };\n\n    this.addComponent = value => {\n      let edit = 0;\n      let data = {};\n\n      if (value) {\n        edit = value.id;\n        data = value;\n      }\n\n      let modal = /*#__PURE__*/_jsxDEV(Add, {\n        edit: edit,\n        data: data,\n        load: this.load,\n        removeComponent: this.removeComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n\n      this.setState({\n        modal: modal\n      });\n    };\n\n    this.changeStatus = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/tasks/status/${id}`); // console.log(response.data)\n\n      if (response.data.status === 'success') {\n        NotificationManager.success('Task statusu deyisdirildi', 'Success', 5000);\n        this.load();\n      } else {\n        NotificationManager.error('Xeta bas verdi', 'Error', 5000);\n      }\n    };\n\n    this.load = async name => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/tasks`);\n\n      if (response.data.status === 'success') {\n        this.setState({\n          tasks: response.data.tasks,\n          delete: userInfo.user.user_info.type === 1 ? true : false,\n          display: false\n        });\n      }\n    };\n\n    this.delete = async id => {\n      let userInfo = JSON.parse(localStorage.getItem('user-info'));\n      axios.interceptors.request.use(config => {\n        config.headers.authorization = `Bearer ${userInfo.user.token}`;\n        return config;\n      }, error => {\n        return Promise.reject(error);\n      });\n      let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/tasks/${id}`);\n\n      if (response.data.status === 'success') {\n        NotificationManager.warning(response.data.message, 'Warning', 5000);\n        this.load();\n      }\n    };\n\n    this.buttons = value => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: '250px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-success\",\n          onClick: () => this.changeStatus(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 103\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-warning\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#exampleModal\",\n          onClick: () => this.addComponent(this.state.tasks.filter(element => element.id === value.id)[0]),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-pencil-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 193\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this), this.state.delete ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn Btn32 btn-danger\",\n          onClick: () => this.delete(value.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 118\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 39\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.date = value => {\n      console.log(value);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Start:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-success\",\n          children: [value.start_date, \", \", value.start_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), \"End:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [value.end_date, \", \", value.end_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      tasks: [],\n      display: true\n    };\n  }\n\n  render() {\n    const columns = [{\n      name: 'Execution date',\n      selector: row => this.date(row)\n    }, {\n      name: 'Description',\n      selector: row => row.note\n    }, {\n      name: 'Client',\n      sortable: true,\n      selector: row => row.client\n    }, {\n      name: 'Mobile',\n      selector: row => row.mobile\n    }, {\n      name: 'Email',\n      sortable: true,\n      selector: row => row.email\n    }, {\n      name: 'Purpose',\n      sortable: true,\n      selector: row => row.purpose\n    }, {\n      name: 'Priority',\n      sortable: true,\n      selector: row => row.priority\n    }, {\n      name: 'Created at',\n      sortable: true,\n      selector: row => row.created_at\n    }, {\n      name: '',\n      selector: row => this.buttons(row)\n    }];\n    const data = [];\n    const priority = ['Low', 'Middle', 'High'];\n\n    if (this.state.tasks.length > 0) {\n      this.state.tasks.map((value, index) => {\n        data.push({\n          id: value.id,\n          note: value.note,\n          start_date: value.start_date,\n          start_time: value.start_time,\n          end_date: value.end_date,\n          start_time: value.start_time,\n          client: value.client,\n          mobile: value.mobile,\n          email: value.email,\n          purpose: value.purpose,\n          priority: priority[value.priority],\n          created_at: value.created_at\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"My Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/\",\n                className: this.props.page === 'actual' ? 'btn btn-info active' : 'btn btn-info',\n                children: \"Actual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"/TasksCompleted\",\n                className: \"btn btn-info ml-2\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-info\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#exampleModal\",\n                onClick: () => this.addComponent(),\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white m-0 p-3 rounded shadow\",\n                children: /*#__PURE__*/_jsxDEV(Datatables, {\n                  columns: columns,\n                  data: data,\n                  pending: this.state.display,\n                  filter: `note`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 4\n      }, this), this.state.modal]\n    }, void 0, true);\n  }\n\n}\n\nexport default MyTasks;","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/MyTasks/MyTasks.js"],"names":["React","NavLink","Add","axios","NotificationContainer","NotificationManager","Datatables","MyTasks","Component","constructor","props","componentDidMount","load","removeComponent","setState","modal","addComponent","value","edit","data","id","changeStatus","userInfo","JSON","parse","localStorage","getItem","interceptors","request","use","config","headers","authorization","user","token","error","Promise","reject","response","post","process","env","REACT_APP_API_URL","status","success","name","get","tasks","delete","user_info","type","display","warning","message","buttons","minWidth","state","filter","element","date","console","log","start_date","start_time","end_date","end_time","render","columns","selector","row","note","sortable","client","mobile","email","purpose","priority","created_at","length","map","index","push","page"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink  } from \"react-router-dom\";\r\nimport Add from './Add';\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Datatables from '../Datatables';\r\n\r\n\r\nclass MyTasks extends React.Component {\r\n\tconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tasks: [],\r\n            display: true,\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.load()\r\n    }\r\n    removeComponent = () => {\r\n        this.setState({\r\n            modal: []\r\n        })\r\n    }\r\n    addComponent = (value) => {\r\n        let edit = 0\r\n        let data = {}\r\n        if (value) {\r\n            edit = value.id\r\n            data = value\r\n        }\r\n\r\n        let modal = <Add edit={edit} data={data} load={this.load} removeComponent={this.removeComponent} />\r\n\r\n        this.setState({\r\n            modal: modal\r\n        })\r\n    }\r\n    changeStatus = async (id) => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.post(`${process.env.REACT_APP_API_URL}/managers/tasks/status/${id}`)\r\n        // console.log(response.data)\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.success('Task statusu deyisdirildi', 'Success', 5000);\r\n            this.load()\r\n        }\r\n        else{\r\n            NotificationManager.error('Xeta bas verdi', 'Error', 5000);\r\n        }\r\n    }\r\n    load = async name => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.get(`${process.env.REACT_APP_API_URL}/managers/tasks`)\r\n        if (response.data.status === 'success') {\r\n            this.setState({\r\n                tasks: response.data.tasks,\r\n                delete: userInfo.user.user_info.type === 1 ? true : false,\r\n                display: false\r\n            })\r\n        }\r\n    }\r\n    delete = async id => {\r\n        let userInfo = JSON.parse(localStorage.getItem('user-info'))\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                config.headers.authorization = `Bearer ${userInfo.user.token}`;\r\n                return config;\r\n            },\r\n            error => {\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n        let response = await axios.delete(`${process.env.REACT_APP_API_URL}/managers/tasks/${id}`)\r\n\r\n\r\n        if (response.data.status === 'success') {\r\n            NotificationManager.warning(response.data.message, 'Warning', 5000);\r\n            this.load()\r\n        }\r\n    }\r\n    buttons = (value) => {\r\n        return (\r\n            <div style={{ minWidth: '250px' }}>\r\n                <button className=\"btn Btn32 btn-success\" onClick={() => this.changeStatus(value.id)}><i className=\"far fa-thumbs-up\"></i></button>\r\n\t\t\t\t<button className=\"btn Btn32 btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent(this.state.tasks.filter(element => element.id === value.id)[0])}><i className=\"fas fa-pencil-alt\"></i></button>\r\n                { this.state.delete ? <button className=\"btn Btn32 btn-danger\" onClick={() => this.delete(value.id)}><i className=\"fas fa-trash\"></i></button> : '' }\r\n            </div>\r\n        )\r\n    }\r\n    date = (value) => {\r\n        console.log(value)\r\n        return(\r\n            <>\r\n                Start: \r\n                <p className=\"text-success\">{value.start_date}, {value.start_time}</p>\r\n                End: \r\n                <p className=\"text-danger\">{value.end_date}, {value.end_time}</p>\r\n            </>\r\n        )\r\n    }\r\n\trender() {\r\n        const columns = [\r\n            {\r\n                name: 'Execution date',\r\n                selector: row => this.date(row),\r\n            },\r\n            {\r\n                name: 'Description',\r\n                selector: row => row.note,\r\n            },\r\n            {\r\n                name: 'Client',\r\n                sortable: true,\r\n                selector: row => row.client,\r\n            },\r\n            {\r\n                name: 'Mobile',\r\n                selector: row => row.mobile,\r\n            },\r\n            {\r\n                name: 'Email',\r\n                sortable: true,\r\n                selector: row => row.email,\r\n            },\r\n            {\r\n                name: 'Purpose',\r\n                sortable: true,\r\n                selector: row => row.purpose,\r\n            },\r\n            {\r\n                name: 'Priority',\r\n                sortable: true,\r\n                selector: row => row.priority,\r\n            },\r\n            {\r\n                name: 'Created at',\r\n                sortable: true,\r\n                selector: row => row.created_at,\r\n            },\r\n            {\r\n                name: '',\r\n                selector: row => this.buttons(row),\r\n            },\r\n        ];\r\n        const data = []\r\n        const priority = ['Low', 'Middle', 'High'];\r\n        if(this.state.tasks.length > 0)\r\n        {\r\n            this.state.tasks.map((value, index) => {\r\n                data.push({ \r\n                    id: value.id, \r\n                    note: value.note, \r\n                    start_date: value.start_date, \r\n                    start_time: value.start_time, \r\n                    end_date: value.end_date, \r\n                    start_time: value.start_time, \r\n                    client: value.client, \r\n                    mobile:  value.mobile,\r\n                    email:  value.email,\r\n                    purpose: value.purpose, \r\n                    priority: priority[value.priority], \r\n                    created_at: value.created_at,\r\n                })\r\n            })\r\n        }\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n            <NotificationContainer />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<h4>My Tasks</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t<NavLink to=\"/\" className={(this.props.page === 'actual') ? 'btn btn-info active' : 'btn btn-info'}>Actual</NavLink>\r\n\t\t\t\t\t\t\t<NavLink to=\"/TasksCompleted\" className=\"btn btn-info ml-2\">Completed</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6\" align='right'>\r\n\t\t\t\t\t\t\t{/* <NavLink to=\"/SchedulingCalendar\" className=\"btn btn-info mx-2\">Calendar</NavLink> */}\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => this.addComponent()}>Add task</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<div className=\"bg-white m-0 p-3 rounded shadow\">\r\n                                <Datatables columns={columns} data={data} pending={this.state.display} filter={`note`}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n                    this.state.modal\r\n                }\r\n\t\t\t</>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default MyTasks;"]},"metadata":{},"sourceType":"module"}