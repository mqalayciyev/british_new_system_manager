{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\INOVA\\\\newsystem\\\\manager\\\\src\\\\Components\\\\Profile\\\\ImageUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { SessionContext } from \"../../Context/Session\";\nimport \"croppie/croppie.css\";\nimport Croppie from \"croppie\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ImageUpload() {\n  _s();\n\n  const [image, setImage] = React.useState(\"\");\n  const [croppie, setCroppie] = React.useState < Croppie | null > null;\n\n  function handleImage(image) {\n    setImage(image);\n    const el = document.getElementById(\"image-helper\");\n\n    if (el) {\n      const croppieInstance = new Croppie(el, {\n        enableExif: true,\n        viewport: {\n          height: 250,\n          width: 250\n        },\n        boundary: {\n          height: 280,\n          width: 400\n        }\n      });\n      croppieInstance.bind({\n        url: image\n      });\n      setCroppie(croppieInstance);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (croppie !== null) {\n      croppie.result({\n        type: 'base64',\n        size: {\n          width: 480,\n          height: 480\n        }\n      }).then(blob => {\n        console.log(blob);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [image === \"\" && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n          image: image,\n          setImage: handleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), image !== \"\" && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: \"center\",\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"image-helper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ImageUpload, \"kD9UrQSWR+ZcrmqWJjEkvApuaqw=\");\n\n_c = ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["C:/wamp64/www/INOVA/newsystem/manager/src/Components/Profile/ImageUpload.js"],"names":["React","Component","axios","NotificationContainer","NotificationManager","SessionContext","Croppie","Button","Grid","ImageUpload","image","setImage","useState","croppie","setCroppie","handleImage","el","document","getElementById","croppieInstance","enableExif","viewport","height","width","boundary","bind","url","handleSubmit","event","preventDefault","result","type","size","then","blob","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { SessionContext } from \"../../Context/Session\";\r\n\r\nimport \"croppie/croppie.css\";\r\nimport Croppie from \"croppie\";\r\nimport { Button, Grid } from \"@material-ui/core\"\r\n\r\n\r\n\r\nexport function ImageUpload() {\r\n    const [image, setImage] = React.useState(\"\")\r\n    const [croppie, setCroppie] = React.useState<Croppie | null>(null)\r\n  \r\n    function handleImage(image) {\r\n      setImage(image)\r\n      const el = document.getElementById(\"image-helper\")\r\n      if (el) {\r\n        const croppieInstance = new Croppie(el, {\r\n          enableExif: true,\r\n          viewport: {\r\n            height: 250,\r\n            width: 250,\r\n          },\r\n          boundary: {\r\n            height: 280,\r\n            width: 400,\r\n         }\r\n      });\r\n      croppieInstance.bind({\r\n        url: image,\r\n      });\r\n      setCroppie(croppieInstance)\r\n      }\r\n    }\r\n  \r\n    function handleSubmit(event) {\r\n      event.preventDefault()\r\n      if (croppie !== null) {\r\n        croppie.result({type: 'base64',\r\n        size: {\r\n            width: 480,\r\n            height: 480\r\n        }}).then((blob) => {\r\n          console.log(blob)\r\n        }\r\n        )\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2}>\r\n          {image === \"\" && (\r\n              <Grid item xs={12}>\r\n                  {/* Your image upload functionality here */}\r\n                  <ImageUpload image={image} setImage={handleImage} />\r\n              </Grid>\r\n              )}\r\n          {image !== \"\" && (\r\n              <Grid item container justify=\"center\" xs={12}>\r\n                <div id=\"image-helper\"></div>\r\n              </Grid>\r\n              )}\r\n          <Grid container item xs={12} justify=\"flex-end\">\r\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    )\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}